

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Dec 05 15:44:38 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 05/01/2024 GMT
    50                           ; 
    51                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     _SSPCON2bits	set	4037
    84   000000                     _PORTAbits	set	3968
    85   000000                     _LATBbits	set	3978
    86   000000                     _LATDbits	set	3980
    87   000000                     _TRISBbits	set	3987
    88   000000                     _TRISDbits	set	3989
    89   000000                     _PIR1bits	set	3998
    90   000000                     _SSPCON2	set	4037
    91   000000                     _SSPCON1	set	4038
    92   000000                     _SSPSTAT	set	4039
    93   000000                     _SSPBUF	set	4041
    94   000000                     _SSPADD	set	4040
    95   000000                     _ADCON1bits	set	4033
    96   000000                     _TRISAbits	set	3986
    97                           
    98                           	psect	smallconst
    99   000800                     __psmallconst:
   100                           	callstack 0
   101   000800  00                 	db	0
   102   000801                     STR_1:
   103   000801  48                 	db	72	;'H'
   104   000802  6F                 	db	111	;'o'
   105   000803  72                 	db	114	;'r'
   106   000804  61                 	db	97	;'a'
   107   000805  3A                 	db	58	;':'
   108   000806  20                 	db	32
   109   000807  25                 	db	37
   110   000808  30                 	db	48	;'0'
   111   000809  32                 	db	50	;'2'
   112   00080A  75                 	db	117	;'u'
   113   00080B  3A                 	db	58	;':'
   114   00080C  25                 	db	37
   115   00080D  30                 	db	48	;'0'
   116   00080E  32                 	db	50	;'2'
   117   00080F  75                 	db	117	;'u'
   118   000810  3A                 	db	58	;':'
   119   000811  25                 	db	37
   120   000812  30                 	db	48	;'0'
   121   000813  32                 	db	50	;'2'
   122   000814  75                 	db	117	;'u'
   123   000815  00                 	db	0
   124   000816                     STR_2:
   125   000816  41                 	db	65	;'A'
   126   000817  4C                 	db	76	;'L'
   127   000818  41                 	db	65	;'A'
   128   000819  52                 	db	82	;'R'
   129   00081A  4D                 	db	77	;'M'
   130   00081B  41                 	db	65	;'A'
   131   00081C  20                 	db	32
   132   00081D  41                 	db	65	;'A'
   133   00081E  43                 	db	67	;'C'
   134   00081F  54                 	db	84	;'T'
   135   000820  49                 	db	73	;'I'
   136   000821  56                 	db	86	;'V'
   137   000822  41                 	db	65	;'A'
   138   000823  44                 	db	68	;'D'
   139   000824  41                 	db	65	;'A'
   140   000825  21                 	db	33
   141   000826  00                 	db	0
   142   000827                     STR_3:
   143   000827  41                 	db	65	;'A'
   144   000828  6C                 	db	108	;'l'
   145   000829  61                 	db	97	;'a'
   146   00082A  72                 	db	114	;'r'
   147   00082B  6D                 	db	109	;'m'
   148   00082C  61                 	db	97	;'a'
   149   00082D  20                 	db	32
   150   00082E  48                 	db	72	;'H'
   151   00082F  3A                 	db	58	;':'
   152   000830  20                 	db	32
   153   000831  25                 	db	37
   154   000832  30                 	db	48	;'0'
   155   000833  32                 	db	50	;'2'
   156   000834  75                 	db	117	;'u'
   157   000835  00                 	db	0
   158   000836                     STR_4:
   159   000836  41                 	db	65	;'A'
   160   000837  6C                 	db	108	;'l'
   161   000838  61                 	db	97	;'a'
   162   000839  72                 	db	114	;'r'
   163   00083A  6D                 	db	109	;'m'
   164   00083B  61                 	db	97	;'a'
   165   00083C  20                 	db	32
   166   00083D  4D                 	db	77	;'M'
   167   00083E  3A                 	db	58	;':'
   168   00083F  20                 	db	32
   169   000840  25                 	db	37
   170   000841  30                 	db	48	;'0'
   171   000842  32                 	db	50	;'2'
   172   000843  75                 	db	117	;'u'
   173   000844  00                 	db	0
   174   000845  00                 	db	0	; dummy byte at the end
   175   000000                     
   176                           ; #config settings
   177                           
   178                           	psect	cinit
   179   00150A                     __pcinit:
   180                           	callstack 0
   181   00150A                     start_initialization:
   182                           	callstack 0
   183   00150A                     __initialization:
   184                           	callstack 0
   185                           
   186                           ; Clear objects allocated to BANK0 (52 bytes)
   187   00150A  EE00  F060         	lfsr	0,__pbssBANK0
   188   00150E  0E34               	movlw	52
   189   001510                     clear_0:
   190   001510  6AEE               	clrf	postinc0,c
   191   001512  06E8               	decf	wreg,f,c
   192   001514  E1FD               	bnz	clear_0
   193                           
   194                           ; Clear objects allocated to COMRAM (13 bytes)
   195   001516  EE00  F041         	lfsr	0,__pbssCOMRAM
   196   00151A  0E0D               	movlw	13
   197   00151C                     clear_1:
   198   00151C  6AEE               	clrf	postinc0,c
   199   00151E  06E8               	decf	wreg,f,c
   200   001520  E1FD               	bnz	clear_1
   201   001522                     end_of_initialization:
   202                           	callstack 0
   203   001522                     __end_of__initialization:
   204                           	callstack 0
   205   001522  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206   001524  6EF8               	movwf	tblptru,c
   207   001526  0100               	movlb	0
   208   001528  EF23  F004         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMRAM
   211   000041                     __pbssCOMRAM:
   212                           	callstack 0
   213   000041                     _width:
   214                           	callstack 0
   215   000041                     	ds	2
   216   000043                     _prec:
   217                           	callstack 0
   218   000043                     	ds	2
   219   000045                     _flags:
   220                           	callstack 0
   221   000045                     	ds	1
   222   000046                     _alarm_min:
   223                           	callstack 0
   224   000046                     	ds	1
   225   000047                     _alarm_hr:
   226                           	callstack 0
   227   000047                     	ds	1
   228   000048                     _estado:
   229                           	callstack 0
   230   000048                     	ds	1
   231   000049                     _alarm_minute:
   232                           	callstack 0
   233   000049                     	ds	1
   234   00004A                     _alarm_hour:
   235                           	callstack 0
   236   00004A                     	ds	1
   237   00004B                     _sec:
   238                           	callstack 0
   239   00004B                     	ds	1
   240   00004C                     _min:
   241                           	callstack 0
   242   00004C                     	ds	1
   243   00004D                     _hr:
   244                           	callstack 0
   245   00004D                     	ds	1
   246                           
   247                           	psect	bssBANK0
   248   000060                     __pbssBANK0:
   249                           	callstack 0
   250   000060                     _dbuf:
   251                           	callstack 0
   252   000060                     	ds	32
   253   000080                     _buffer:
   254                           	callstack 0
   255   000080                     	ds	20
   256                           
   257                           	psect	cstackCOMRAM
   258   000001                     __pcstackCOMRAM:
   259                           	callstack 0
   260   000001                     ?___wmul:
   261                           	callstack 0
   262   000001                     ?___awmod:
   263                           	callstack 0
   264   000001                     ?___lwdiv:
   265                           	callstack 0
   266   000001                     ?___lwmod:
   267                           	callstack 0
   268   000001                     DS3231_Bin_Bcd@binary_value:
   269                           	callstack 0
   270   000001                     DS3231_Bcd_Bin@temp:
   271                           	callstack 0
   272   000001                     I2C_Init_Master@sp_i2c:
   273                           	callstack 0
   274   000001                     I2C_Write@data:
   275                           	callstack 0
   276   000001                     Lcd_Port@a:
   277                           	callstack 0
   278   000001                     ___wmul@multiplier:
   279                           	callstack 0
   280   000001                     ___awmod@dividend:
   281                           	callstack 0
   282   000001                     ___lwdiv@dividend:
   283                           	callstack 0
   284   000001                     ___lwmod@dividend:
   285                           	callstack 0
   286   000001                     fputc@c:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x0
   290   000001                     	ds	1
   291   000002                     ??_Lcd_Cmd:
   292   000002                     DS3231_Read@reg:
   293                           	callstack 0
   294   000002                     DS3231_Bin_Bcd@retval:
   295                           	callstack 0
   296   000002                     DS3231_Bcd_Bin@bcd_value:
   297                           	callstack 0
   298   000002                     Lcd_Write_Char@temp:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x1
   302   000002                     	ds	1
   303   000003                     DS3231_Read@data:
   304                           	callstack 0
   305   000003                     DS3231_Bin_Bcd@temp:
   306                           	callstack 0
   307   000003                     Lcd_Cmd@a:
   308                           	callstack 0
   309   000003                     Lcd_Write_Char@y:
   310                           	callstack 0
   311   000003                     fputc@fp:
   312                           	callstack 0
   313   000003                     ___wmul@multiplicand:
   314                           	callstack 0
   315   000003                     ___awmod@divisor:
   316                           	callstack 0
   317   000003                     ___lwdiv@divisor:
   318                           	callstack 0
   319   000003                     ___lwmod@divisor:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x2
   323   000003                     	ds	1
   324   000004                     ??_fputc:
   325   000004                     ??_Lcd_Init:
   326   000004                     DS3231_Set_Date_Time@mn:
   327                           	callstack 0
   328   000004                     DS3231_Get_Time@hr:
   329                           	callstack 0
   330   000004                     Lcd_Set_Cursor@b:
   331                           	callstack 0
   332   000004                     Lcd_Write_Char@a:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x3
   336   000004                     	ds	1
   337   000005                     DS3231_Set_Date_Time@sc:
   338                           	callstack 0
   339   000005                     DS3231_Get_Time@min:
   340                           	callstack 0
   341   000005                     Lcd_Set_Cursor@z:
   342                           	callstack 0
   343   000005                     ___awmod@counter:
   344                           	callstack 0
   345   000005                     ___lwmod@counter:
   346                           	callstack 0
   347   000005                     Lcd_Write_String@a:
   348                           	callstack 0
   349   000005                     ___wmul@product:
   350                           	callstack 0
   351   000005                     ___lwdiv@quotient:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x4
   355   000005                     	ds	1
   356   000006                     DS3231_Set_Date_Time@hr:
   357                           	callstack 0
   358   000006                     DS3231_Get_Time@sec:
   359                           	callstack 0
   360   000006                     Lcd_Set_Cursor@y:
   361                           	callstack 0
   362   000006                     ___awmod@sign:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x5
   366   000006                     	ds	1
   367   000007                     ??_Lcd_Write_String:
   368   000007                     ?_read_prec_or_width:
   369                           	callstack 0
   370   000007                     Lcd_Set_Cursor@temp:
   371                           	callstack 0
   372   000007                     ___lwdiv@counter:
   373                           	callstack 0
   374   000007                     read_prec_or_width@fmt:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x6
   378   000007                     	ds	1
   379   000008                     Lcd_Set_Cursor@a:
   380                           	callstack 0
   381   000008                     read_prec_or_width@ap:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x7
   385   000008                     	ds	1
   386   000009                     read_prec_or_width@c:
   387                           	callstack 0
   388   000009                     fputs@s:
   389                           	callstack 0
   390   000009                     Lcd_Write_String@i:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x8
   394   000009                     	ds	1
   395   00000A                     fputs@fp:
   396                           	callstack 0
   397   00000A                     read_prec_or_width@n:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x9
   401   00000A                     	ds	1
   402   00000B                     fputs@c:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0xA
   406   00000B                     	ds	1
   407   00000C                     fputs@i:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0xB
   411   00000C                     	ds	2
   412   00000E                     pad@fp:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0xD
   416   00000E                     	ds	1
   417   00000F                     pad@buf:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0xE
   421   00000F                     	ds	1
   422   000010                     pad@p:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xF
   426   000010                     	ds	2
   427   000012                     ??_pad:
   428                           
   429                           ; 1 bytes @ 0x11
   430   000012                     	ds	1
   431   000013                     pad@i:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x12
   435   000013                     	ds	2
   436   000015                     utoa@fp:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x14
   440   000015                     	ds	1
   441   000016                     utoa@d:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x15
   445   000016                     	ds	2
   446   000018                     utoa@p:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x17
   450   000018                     	ds	1
   451   000019                     utoa@w:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x18
   455   000019                     	ds	2
   456   00001B                     utoa@i:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x1A
   460   00001B                     	ds	2
   461   00001D                     vfpfcnvrt@fp:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x1C
   465   00001D                     	ds	1
   466   00001E                     vfpfcnvrt@fmt:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x1D
   470   00001E                     	ds	1
   471   00001F                     vfpfcnvrt@ap:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x1E
   475   00001F                     	ds	1
   476   000020                     vfpfcnvrt@convarg:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x1F
   480   000020                     	ds	4
   481   000024                     vfpfcnvrt@done:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x23
   485   000024                     	ds	1
   486   000025                     vfpfcnvrt@cp:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x24
   490   000025                     	ds	1
   491   000026                     ?_vfprintf:
   492                           	callstack 0
   493   000026                     vfprintf@fp:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x25
   497   000026                     	ds	1
   498   000027                     vfprintf@fmt:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x26
   502   000027                     	ds	1
   503   000028                     vfprintf@ap:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x27
   507   000028                     	ds	1
   508   000029                     vfprintf@cfmt:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x28
   512   000029                     	ds	1
   513   00002A                     ?_sprintf:
   514                           	callstack 0
   515   00002A                     sprintf@s:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x29
   519   00002A                     	ds	1
   520   00002B                     sprintf@fmt:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x2A
   524   00002B                     	ds	7
   525   000032                     sprintf@ap:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x31
   529   000032                     	ds	1
   530   000033                     sprintf@f:
   531                           	callstack 0
   532                           
   533                           ; 12 bytes @ 0x32
   534   000033                     	ds	12
   535   00003F                     ??_main:
   536                           
   537                           ; 1 bytes @ 0x3E
   538   00003F                     	ds	2
   539                           
   540 ;;
   541 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   542 ;;
   543 ;; *************** function _main *****************
   544 ;; Defined at:
   545 ;;		line 70 in file "RTC_Set_Data.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   559 ;;      Params:         0       0       0       0       0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0       0       0       0       0
   561 ;;      Temps:          2       0       0       0       0       0       0       0       0
   562 ;;      Totals:         2       0       0       0       0       0       0       0       0
   563 ;;Total ram usage:        2 bytes
   564 ;; Hardware stack levels required when called: 8
   565 ;; This function calls:
   566 ;;		_DS3231_Get_Time
   567 ;;		_I2C_Init_Master
   568 ;;		_Lcd_Clear
   569 ;;		_Lcd_Init
   570 ;;		_Lcd_Set_Cursor
   571 ;;		_Lcd_Write_String
   572 ;;		___awmod
   573 ;;		_inicializarHoraColombia
   574 ;;		_sprintf
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text0
   581   000846                     __ptext0:
   582                           	callstack 0
   583   000846                     _main:
   584                           	callstack 23
   585   000846                     
   586                           ;RTC_Set_Data.c: 71:     ADCON1bits.PCFG = 0x0F;
   587   000846  0E0F               	movlw	15
   588   000848  12C1               	iorwf	193,f,c	;volatile
   589   00084A                     
   590                           ;RTC_Set_Data.c: 72:     TRISAbits.RA0 = 1;
   591   00084A  8092               	bsf	146,0,c	;volatile
   592   00084C                     
   593                           ;RTC_Set_Data.c: 73:     TRISAbits.RA1 = 1;
   594   00084C  8292               	bsf	146,1,c	;volatile
   595   00084E                     
   596                           ;RTC_Set_Data.c: 74:     TRISAbits.RA2 = 1;
   597   00084E  8492               	bsf	146,2,c	;volatile
   598   000850                     
   599                           ;RTC_Set_Data.c: 75:     TRISBbits.RB2 = 0;
   600   000850  9493               	bcf	147,2,c	;volatile
   601   000852                     
   602                           ;RTC_Set_Data.c: 76:     Lcd_Init();
   603   000852  EC3E  F008         	call	_Lcd_Init	;wreg free
   604   000856                     
   605                           ;RTC_Set_Data.c: 77:     I2C_Init_Master(0x80);
   606   000856  0E80               	movlw	128
   607   000858  EC92  F009         	call	_I2C_Init_Master
   608   00085C                     
   609                           ;RTC_Set_Data.c: 79:     inicializarHoraColombia();
   610   00085C  ECF2  F00A         	call	_inicializarHoraColombia	;wreg free
   611   000860                     
   612                           ;RTC_Set_Data.c: 81:     Lcd_Clear();
   613   000860  ECFA  F00A         	call	_Lcd_Clear	;wreg free
   614   000864                     l2077:
   615                           
   616                           ;RTC_Set_Data.c: 84:         if (PORTAbits.RA0 == 1) {
   617   000864  A080               	btfss	128,0,c	;volatile
   618   000866  EF37  F004         	goto	u1241
   619   00086A  EF39  F004         	goto	u1240
   620   00086E                     u1241:
   621   00086E  EF88  F005         	goto	l2159
   622   000872                     u1240:
   623   000872                     l236:
   624   000872  B080               	btfsc	128,0,c	;volatile
   625   000874  EF3E  F004         	goto	u1251
   626   000878  EF40  F004         	goto	u1250
   627   00087C                     u1251:
   628   00087C  EF39  F004         	goto	l236
   629   000880                     u1250:
   630   000880                     
   631                           ;RTC_Set_Data.c: 86:             _delay((unsigned long)((20)*(20000000/4000.0)));
   632   000880  0E82               	movlw	130
   633   000882  6E3F               	movwf	??_main^0,c
   634   000884  0EDE               	movlw	222
   635   000886                     u1367:
   636   000886  2EE8               	decfsz	wreg,f,c
   637   000888  D7FE               	bra	u1367
   638   00088A  2E3F               	decfsz	??_main^0,f,c
   639   00088C  D7FC               	bra	u1367
   640   00088E                     
   641                           ;RTC_Set_Data.c: 87:             Lcd_Clear();
   642   00088E  ECFA  F00A         	call	_Lcd_Clear	;wreg free
   643   000892                     
   644                           ;RTC_Set_Data.c: 88:             estado = (estado + 1) % 3;
   645   000892  0E01               	movlw	1
   646   000894  2448               	addwf	_estado^0,w,c
   647   000896  6E01               	movwf	___awmod@dividend^0,c
   648   000898  6AE8               	clrf	wreg,c
   649   00089A  B0D8               	btfsc	status,0,c
   650   00089C  2AE8               	incf	wreg,f,c
   651   00089E  BE48               	btfsc	_estado^0,7,c
   652   0008A0  06E8               	decf	wreg,f,c
   653   0008A2  6E02               	movwf	(___awmod@dividend+1)^0,c
   654   0008A4  0E00               	movlw	0
   655   0008A6  6E04               	movwf	(___awmod@divisor+1)^0,c
   656   0008A8  0E03               	movlw	3
   657   0008AA  6E03               	movwf	___awmod@divisor^0,c
   658   0008AC  ECB6  F006         	call	___awmod	;wreg free
   659   0008B0  5001               	movf	?___awmod^0,w,c
   660   0008B2  6E48               	movwf	_estado^0,c
   661   0008B4  EF88  F005         	goto	l2159
   662   0008B8                     l2087:
   663                           
   664                           ;RTC_Set_Data.c: 93:                 DS3231_Get_Time(&hr, &min, &sec);
   665   0008B8  0E4D               	movlw	low _hr
   666   0008BA  6E04               	movwf	DS3231_Get_Time@hr^0,c
   667   0008BC  0E4C               	movlw	low _min
   668   0008BE  6E05               	movwf	DS3231_Get_Time@min^0,c
   669   0008C0  0E4B               	movlw	low _sec
   670   0008C2  6E06               	movwf	DS3231_Get_Time@sec^0,c
   671   0008C4  ECF8  F008         	call	_DS3231_Get_Time	;wreg free
   672   0008C8                     
   673                           ;RTC_Set_Data.c: 94:                 sprintf(buffer, "Hora: %02u:%02u:%02u", hr, min, se
      +                          c);
   674   0008C8  0E80               	movlw	low _buffer
   675   0008CA  6E2A               	movwf	sprintf@s^0,c
   676   0008CC  0E01               	movlw	low STR_1
   677   0008CE  6E2B               	movwf	sprintf@fmt^0,c
   678   0008D0  504D               	movf	_hr^0,w,c
   679   0008D2  6E2C               	movwf	(?_sprintf+2)^0,c
   680   0008D4  6A2D               	clrf	(?_sprintf+3)^0,c
   681   0008D6  BE2C               	btfsc	(?_sprintf+2)^0,7,c
   682   0008D8  062D               	decf	(?_sprintf+3)^0,f,c
   683   0008DA  504C               	movf	_min^0,w,c
   684   0008DC  6E2E               	movwf	(?_sprintf+4)^0,c
   685   0008DE  6A2F               	clrf	(?_sprintf+5)^0,c
   686   0008E0  BE2E               	btfsc	(?_sprintf+4)^0,7,c
   687   0008E2  062F               	decf	(?_sprintf+5)^0,f,c
   688   0008E4  504B               	movf	_sec^0,w,c
   689   0008E6  6E30               	movwf	(?_sprintf+6)^0,c
   690   0008E8  6A31               	clrf	(?_sprintf+7)^0,c
   691   0008EA  BE30               	btfsc	(?_sprintf+6)^0,7,c
   692   0008EC  0631               	decf	(?_sprintf+7)^0,f,c
   693   0008EE  EC2A  F00A         	call	_sprintf	;wreg free
   694   0008F2                     
   695                           ;RTC_Set_Data.c: 95:                 Lcd_Set_Cursor(1, 1);
   696   0008F2  0E01               	movlw	1
   697   0008F4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   698   0008F6  0E01               	movlw	1
   699   0008F8  ECFB  F007         	call	_Lcd_Set_Cursor
   700   0008FC                     
   701                           ;RTC_Set_Data.c: 96:                 Lcd_Write_String(buffer);
   702   0008FC  0E80               	movlw	low _buffer
   703   0008FE  6E05               	movwf	Lcd_Write_String@a^0,c
   704   000900  6A06               	clrf	(Lcd_Write_String@a+1)^0,c
   705   000902  EC7F  F008         	call	_Lcd_Write_String	;wreg free
   706   000906                     
   707                           ;RTC_Set_Data.c: 98:                 if (hr == alarm_hr && min == alarm_min) {
   708   000906  5047               	movf	_alarm_hr^0,w,c
   709   000908  184D               	xorwf	_hr^0,w,c
   710   00090A  A4D8               	btfss	status,2,c
   711   00090C  EF8A  F004         	goto	u1261
   712   000910  EF8C  F004         	goto	u1260
   713   000914                     u1261:
   714   000914  EF32  F004         	goto	l2077
   715   000918                     u1260:
   716   000918  5046               	movf	_alarm_min^0,w,c
   717   00091A  184C               	xorwf	_min^0,w,c
   718   00091C  A4D8               	btfss	status,2,c
   719   00091E  EF93  F004         	goto	u1271
   720   000922  EF95  F004         	goto	u1270
   721   000926                     u1271:
   722   000926  EF32  F004         	goto	l2077
   723   00092A                     u1270:
   724   00092A                     
   725                           ;RTC_Set_Data.c: 99:                     Lcd_Set_Cursor(2, 1);
   726   00092A  0E01               	movlw	1
   727   00092C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   728   00092E  0E02               	movlw	2
   729   000930  ECFB  F007         	call	_Lcd_Set_Cursor
   730   000934                     
   731                           ;RTC_Set_Data.c: 100:                     Lcd_Write_String("ALARMA ACTIVADA!");
   732   000934  0E16               	movlw	low STR_2
   733   000936  6E05               	movwf	Lcd_Write_String@a^0,c
   734   000938  5005               	movf	Lcd_Write_String@a^0,w,c
   735   00093A  A4D8               	btfss	status,2,c
   736   00093C  0E08               	movlw	high __smallconst
   737   00093E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   738   000940  EC7F  F008         	call	_Lcd_Write_String	;wreg free
   739   000944                     
   740                           ;RTC_Set_Data.c: 101:                     LATBbits.LATB2 = 1;
   741   000944  848A               	bsf	138,2,c	;volatile
   742   000946                     
   743                           ;RTC_Set_Data.c: 102:                     _delay((unsigned long)((500)*(20000000/4000.0)
      +                          ));
   744   000946  0E0D               	movlw	13
   745   000948  6E40               	movwf	(??_main+1)^0,c
   746   00094A  0EAF               	movlw	175
   747   00094C  6E3F               	movwf	??_main^0,c
   748   00094E  0EB6               	movlw	182
   749   000950                     u1377:
   750   000950  2EE8               	decfsz	wreg,f,c
   751   000952  D7FE               	bra	u1377
   752   000954  2E3F               	decfsz	??_main^0,f,c
   753   000956  D7FC               	bra	u1377
   754   000958  2E40               	decfsz	(??_main+1)^0,f,c
   755   00095A  D7FA               	bra	u1377
   756   00095C  D000               	nop2	
   757   00095E                     
   758                           ;RTC_Set_Data.c: 103:                     LATBbits.LATB2 = 0;
   759   00095E  948A               	bcf	138,2,c	;volatile
   760   000960                     
   761                           ;RTC_Set_Data.c: 104:                     _delay((unsigned long)((500)*(20000000/4000.0)
      +                          ));
   762   000960  0E0D               	movlw	13
   763   000962  6E40               	movwf	(??_main+1)^0,c
   764   000964  0EAF               	movlw	175
   765   000966  6E3F               	movwf	??_main^0,c
   766   000968  0EB6               	movlw	182
   767   00096A                     u1387:
   768   00096A  2EE8               	decfsz	wreg,f,c
   769   00096C  D7FE               	bra	u1387
   770   00096E  2E3F               	decfsz	??_main^0,f,c
   771   000970  D7FC               	bra	u1387
   772   000972  2E40               	decfsz	(??_main+1)^0,f,c
   773   000974  D7FA               	bra	u1387
   774   000976  D000               	nop2	
   775   000978  EF32  F004         	goto	l2077
   776   00097C                     l2111:
   777                           
   778                           ;RTC_Set_Data.c: 109:                 sprintf(buffer, "Alarma H: %02u", alarm_hr);
   779   00097C  0E80               	movlw	low _buffer
   780   00097E  6E2A               	movwf	sprintf@s^0,c
   781   000980  0E27               	movlw	low STR_3
   782   000982  6E2B               	movwf	sprintf@fmt^0,c
   783   000984  5047               	movf	_alarm_hr^0,w,c
   784   000986  6E2C               	movwf	(?_sprintf+2)^0,c
   785   000988  6A2D               	clrf	(?_sprintf+3)^0,c
   786   00098A  BE2C               	btfsc	(?_sprintf+2)^0,7,c
   787   00098C  062D               	decf	(?_sprintf+3)^0,f,c
   788   00098E  EC2A  F00A         	call	_sprintf	;wreg free
   789   000992                     
   790                           ;RTC_Set_Data.c: 110:                 Lcd_Set_Cursor(1, 1);
   791   000992  0E01               	movlw	1
   792   000994  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   793   000996  0E01               	movlw	1
   794   000998  ECFB  F007         	call	_Lcd_Set_Cursor
   795   00099C                     
   796                           ;RTC_Set_Data.c: 111:                 Lcd_Write_String(buffer);
   797   00099C  0E80               	movlw	low _buffer
   798   00099E  6E05               	movwf	Lcd_Write_String@a^0,c
   799   0009A0  6A06               	clrf	(Lcd_Write_String@a+1)^0,c
   800   0009A2  EC7F  F008         	call	_Lcd_Write_String	;wreg free
   801   0009A6                     
   802                           ;RTC_Set_Data.c: 112:                 if (PORTAbits.RA1 == 1) {
   803   0009A6  A280               	btfss	128,1,c	;volatile
   804   0009A8  EFD8  F004         	goto	u1281
   805   0009AC  EFDA  F004         	goto	u1280
   806   0009B0                     u1281:
   807   0009B0  EFF9  F004         	goto	l2125
   808   0009B4                     u1280:
   809   0009B4                     l245:
   810   0009B4  B280               	btfsc	128,1,c	;volatile
   811   0009B6  EFDF  F004         	goto	u1291
   812   0009BA  EFE1  F004         	goto	u1290
   813   0009BE                     u1291:
   814   0009BE  EFDA  F004         	goto	l245
   815   0009C2                     u1290:
   816   0009C2                     
   817                           ;RTC_Set_Data.c: 114:                     _delay((unsigned long)((20)*(20000000/4000.0))
      +                          );
   818   0009C2  0E82               	movlw	130
   819   0009C4  6E3F               	movwf	??_main^0,c
   820   0009C6  0EDE               	movlw	222
   821   0009C8                     u1397:
   822   0009C8  2EE8               	decfsz	wreg,f,c
   823   0009CA  D7FE               	bra	u1397
   824   0009CC  2E3F               	decfsz	??_main^0,f,c
   825   0009CE  D7FC               	bra	u1397
   826   0009D0                     
   827                           ;RTC_Set_Data.c: 115:                     alarm_hr = (alarm_hr + 1) % 24;
   828   0009D0  0E01               	movlw	1
   829   0009D2  2447               	addwf	_alarm_hr^0,w,c
   830   0009D4  6E01               	movwf	___awmod@dividend^0,c
   831   0009D6  6AE8               	clrf	wreg,c
   832   0009D8  B0D8               	btfsc	status,0,c
   833   0009DA  2AE8               	incf	wreg,f,c
   834   0009DC  BE47               	btfsc	_alarm_hr^0,7,c
   835   0009DE  06E8               	decf	wreg,f,c
   836   0009E0  6E02               	movwf	(___awmod@dividend+1)^0,c
   837   0009E2  0E00               	movlw	0
   838   0009E4  6E04               	movwf	(___awmod@divisor+1)^0,c
   839   0009E6  0E18               	movlw	24
   840   0009E8  6E03               	movwf	___awmod@divisor^0,c
   841   0009EA  ECB6  F006         	call	___awmod	;wreg free
   842   0009EE  5001               	movf	?___awmod^0,w,c
   843   0009F0  6E47               	movwf	_alarm_hr^0,c
   844   0009F2                     l2125:
   845                           
   846                           ;RTC_Set_Data.c: 117:                 if (PORTAbits.RA2 == 1) {
   847   0009F2  A480               	btfss	128,2,c	;volatile
   848   0009F4  EFFE  F004         	goto	u1301
   849   0009F8  EF00  F005         	goto	u1300
   850   0009FC                     u1301:
   851   0009FC  EF32  F004         	goto	l2077
   852   000A00                     u1300:
   853   000A00                     l249:
   854   000A00  B480               	btfsc	128,2,c	;volatile
   855   000A02  EF05  F005         	goto	u1311
   856   000A06  EF07  F005         	goto	u1310
   857   000A0A                     u1311:
   858   000A0A  EF00  F005         	goto	l249
   859   000A0E                     u1310:
   860   000A0E                     
   861                           ;RTC_Set_Data.c: 119:                     _delay((unsigned long)((20)*(20000000/4000.0))
      +                          );
   862   000A0E  0E82               	movlw	130
   863   000A10  6E3F               	movwf	??_main^0,c
   864   000A12  0EDE               	movlw	222
   865   000A14                     u1407:
   866   000A14  2EE8               	decfsz	wreg,f,c
   867   000A16  D7FE               	bra	u1407
   868   000A18  2E3F               	decfsz	??_main^0,f,c
   869   000A1A  D7FC               	bra	u1407
   870   000A1C                     
   871                           ;RTC_Set_Data.c: 120:                     alarm_hr = (alarm_hr - 1 + 24) % 24;
   872   000A1C  0E17               	movlw	23
   873   000A1E  2447               	addwf	_alarm_hr^0,w,c
   874   000A20  6E01               	movwf	___awmod@dividend^0,c
   875   000A22  6AE8               	clrf	wreg,c
   876   000A24  B0D8               	btfsc	status,0,c
   877   000A26  2AE8               	incf	wreg,f,c
   878   000A28  BE47               	btfsc	_alarm_hr^0,7,c
   879   000A2A  06E8               	decf	wreg,f,c
   880   000A2C  6E02               	movwf	(___awmod@dividend+1)^0,c
   881   000A2E  0E00               	movlw	0
   882   000A30  6E04               	movwf	(___awmod@divisor+1)^0,c
   883   000A32  0E18               	movlw	24
   884   000A34  6E03               	movwf	___awmod@divisor^0,c
   885   000A36  ECB6  F006         	call	___awmod	;wreg free
   886   000A3A  5001               	movf	?___awmod^0,w,c
   887   000A3C  6E47               	movwf	_alarm_hr^0,c
   888   000A3E  EF32  F004         	goto	l2077
   889   000A42                     l2133:
   890                           
   891                           ;RTC_Set_Data.c: 125:                 sprintf(buffer, "Alarma M: %02u", alarm_min);
   892   000A42  0E80               	movlw	low _buffer
   893   000A44  6E2A               	movwf	sprintf@s^0,c
   894   000A46  0E36               	movlw	low STR_4
   895   000A48  6E2B               	movwf	sprintf@fmt^0,c
   896   000A4A  5046               	movf	_alarm_min^0,w,c
   897   000A4C  6E2C               	movwf	(?_sprintf+2)^0,c
   898   000A4E  6A2D               	clrf	(?_sprintf+3)^0,c
   899   000A50  BE2C               	btfsc	(?_sprintf+2)^0,7,c
   900   000A52  062D               	decf	(?_sprintf+3)^0,f,c
   901   000A54  EC2A  F00A         	call	_sprintf	;wreg free
   902   000A58                     
   903                           ;RTC_Set_Data.c: 126:                 Lcd_Set_Cursor(1, 1);
   904   000A58  0E01               	movlw	1
   905   000A5A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   906   000A5C  0E01               	movlw	1
   907   000A5E  ECFB  F007         	call	_Lcd_Set_Cursor
   908   000A62                     
   909                           ;RTC_Set_Data.c: 127:                 Lcd_Write_String(buffer);
   910   000A62  0E80               	movlw	low _buffer
   911   000A64  6E05               	movwf	Lcd_Write_String@a^0,c
   912   000A66  6A06               	clrf	(Lcd_Write_String@a+1)^0,c
   913   000A68  EC7F  F008         	call	_Lcd_Write_String	;wreg free
   914   000A6C                     
   915                           ;RTC_Set_Data.c: 128:                 if (PORTAbits.RA1 == 1) {
   916   000A6C  A280               	btfss	128,1,c	;volatile
   917   000A6E  EF3B  F005         	goto	u1321
   918   000A72  EF3D  F005         	goto	u1320
   919   000A76                     u1321:
   920   000A76  EF5C  F005         	goto	l2147
   921   000A7A                     u1320:
   922   000A7A                     l254:
   923   000A7A  B280               	btfsc	128,1,c	;volatile
   924   000A7C  EF42  F005         	goto	u1331
   925   000A80  EF44  F005         	goto	u1330
   926   000A84                     u1331:
   927   000A84  EF3D  F005         	goto	l254
   928   000A88                     u1330:
   929   000A88                     
   930                           ;RTC_Set_Data.c: 130:                     _delay((unsigned long)((20)*(20000000/4000.0))
      +                          );
   931   000A88  0E82               	movlw	130
   932   000A8A  6E3F               	movwf	??_main^0,c
   933   000A8C  0EDE               	movlw	222
   934   000A8E                     u1417:
   935   000A8E  2EE8               	decfsz	wreg,f,c
   936   000A90  D7FE               	bra	u1417
   937   000A92  2E3F               	decfsz	??_main^0,f,c
   938   000A94  D7FC               	bra	u1417
   939   000A96                     
   940                           ;RTC_Set_Data.c: 131:                     alarm_min = (alarm_min + 1) % 60;
   941   000A96  0E01               	movlw	1
   942   000A98  2446               	addwf	_alarm_min^0,w,c
   943   000A9A  6E01               	movwf	___awmod@dividend^0,c
   944   000A9C  6AE8               	clrf	wreg,c
   945   000A9E  B0D8               	btfsc	status,0,c
   946   000AA0  2AE8               	incf	wreg,f,c
   947   000AA2  BE46               	btfsc	_alarm_min^0,7,c
   948   000AA4  06E8               	decf	wreg,f,c
   949   000AA6  6E02               	movwf	(___awmod@dividend+1)^0,c
   950   000AA8  0E00               	movlw	0
   951   000AAA  6E04               	movwf	(___awmod@divisor+1)^0,c
   952   000AAC  0E3C               	movlw	60
   953   000AAE  6E03               	movwf	___awmod@divisor^0,c
   954   000AB0  ECB6  F006         	call	___awmod	;wreg free
   955   000AB4  5001               	movf	?___awmod^0,w,c
   956   000AB6  6E46               	movwf	_alarm_min^0,c
   957   000AB8                     l2147:
   958                           
   959                           ;RTC_Set_Data.c: 133:                 if (PORTAbits.RA2 == 1) {
   960   000AB8  A480               	btfss	128,2,c	;volatile
   961   000ABA  EF61  F005         	goto	u1341
   962   000ABE  EF63  F005         	goto	u1340
   963   000AC2                     u1341:
   964   000AC2  EF32  F004         	goto	l2077
   965   000AC6                     u1340:
   966   000AC6                     l258:
   967   000AC6  B480               	btfsc	128,2,c	;volatile
   968   000AC8  EF68  F005         	goto	u1351
   969   000ACC  EF6A  F005         	goto	u1350
   970   000AD0                     u1351:
   971   000AD0  EF63  F005         	goto	l258
   972   000AD4                     u1350:
   973   000AD4                     
   974                           ;RTC_Set_Data.c: 135:                     _delay((unsigned long)((20)*(20000000/4000.0))
      +                          );
   975   000AD4  0E82               	movlw	130
   976   000AD6  6E3F               	movwf	??_main^0,c
   977   000AD8  0EDE               	movlw	222
   978   000ADA                     u1427:
   979   000ADA  2EE8               	decfsz	wreg,f,c
   980   000ADC  D7FE               	bra	u1427
   981   000ADE  2E3F               	decfsz	??_main^0,f,c
   982   000AE0  D7FC               	bra	u1427
   983   000AE2                     
   984                           ;RTC_Set_Data.c: 136:                     alarm_min = (alarm_min - 1 + 60) % 60;
   985   000AE2  0E3B               	movlw	59
   986   000AE4  2446               	addwf	_alarm_min^0,w,c
   987   000AE6  6E01               	movwf	___awmod@dividend^0,c
   988   000AE8  6AE8               	clrf	wreg,c
   989   000AEA  B0D8               	btfsc	status,0,c
   990   000AEC  2AE8               	incf	wreg,f,c
   991   000AEE  BE46               	btfsc	_alarm_min^0,7,c
   992   000AF0  06E8               	decf	wreg,f,c
   993   000AF2  6E02               	movwf	(___awmod@dividend+1)^0,c
   994   000AF4  0E00               	movlw	0
   995   000AF6  6E04               	movwf	(___awmod@divisor+1)^0,c
   996   000AF8  0E3C               	movlw	60
   997   000AFA  6E03               	movwf	___awmod@divisor^0,c
   998   000AFC  ECB6  F006         	call	___awmod	;wreg free
   999   000B00  5001               	movf	?___awmod^0,w,c
  1000   000B02  6E46               	movwf	_alarm_min^0,c
  1001   000B04  EF32  F004         	goto	l2077
  1002   000B08                     l2155:
  1003                           
  1004                           ;RTC_Set_Data.c: 141:                 estado = 0;
  1005   000B08  0E00               	movlw	0
  1006   000B0A  6E48               	movwf	_estado^0,c
  1007                           
  1008                           ;RTC_Set_Data.c: 142:                 break;
  1009   000B0C  EF32  F004         	goto	l2077
  1010   000B10                     l2159:
  1011   000B10  5048               	movf	_estado^0,w,c
  1012                           
  1013                           ; Switch size 1, requested type "simple"
  1014                           ; Number of cases is 3, Range of values is 0 to 2
  1015                           ; switch strategies available:
  1016                           ; Name         Instructions Cycles
  1017                           ; simple_byte           10     6 (average)
  1018                           ;	Chosen strategy is simple_byte
  1019   000B12  0A00               	xorlw	0	; case 0
  1020   000B14  B4D8               	btfsc	status,2,c
  1021   000B16  EF5C  F004         	goto	l2087
  1022   000B1A  0A01               	xorlw	1	; case 1
  1023   000B1C  B4D8               	btfsc	status,2,c
  1024   000B1E  EFBE  F004         	goto	l2111
  1025   000B22  0A03               	xorlw	3	; case 2
  1026   000B24  B4D8               	btfsc	status,2,c
  1027   000B26  EF21  F005         	goto	l2133
  1028   000B2A  EF84  F005         	goto	l2155
  1029   000B2E  EF00  F000         	goto	start
  1030   000B32                     __end_of_main:
  1031                           	callstack 0
  1032                           
  1033 ;; *************** function _sprintf *****************
  1034 ;; Defined at:
  1035 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  s               1   41[COMRAM] PTR unsigned char 
  1038 ;;		 -> buffer(20), 
  1039 ;;  fmt             1   42[COMRAM] PTR const unsigned char 
  1040 ;;		 -> STR_4(15), STR_3(15), STR_1(21), 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  f              12   50[COMRAM] struct _IO_FILE
  1043 ;;  ret             2    0        int 
  1044 ;;  ap              1   49[COMRAM] PTR void [1]
  1045 ;;		 -> ?_sprintf(2), 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  2   41[COMRAM] int 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         8       0       0       0       0       0       0       0       0
  1056 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:        21       0       0       0       0       0       0       0       0
  1059 ;;Total ram usage:       21 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; Hardware stack levels required when called: 7
  1062 ;; This function calls:
  1063 ;;		_vfprintf
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text1
  1070   001454                     __ptext1:
  1071                           	callstack 0
  1072   001454                     _sprintf:
  1073                           	callstack 23
  1074   001454  0E2C               	movlw	low (?_sprintf+2)
  1075   001456  6E32               	movwf	sprintf@ap^0,c
  1076   001458  C02A  F033         	movff	sprintf@s,sprintf@f
  1077   00145C  0E00               	movlw	0
  1078   00145E  6E37               	movwf	(sprintf@f+4)^0,c
  1079   001460  0E00               	movlw	0
  1080   001462  6E36               	movwf	(sprintf@f+3)^0,c
  1081   001464  0E00               	movlw	0
  1082   001466  6E3E               	movwf	(sprintf@f+11)^0,c
  1083   001468  0E00               	movlw	0
  1084   00146A  6E3D               	movwf	(sprintf@f+10)^0,c
  1085   00146C  0E33               	movlw	low sprintf@f
  1086   00146E  6E26               	movwf	vfprintf@fp^0,c
  1087   001470  C02B  F027         	movff	sprintf@fmt,vfprintf@fmt
  1088   001474  0E32               	movlw	low sprintf@ap
  1089   001476  6E28               	movwf	vfprintf@ap^0,c
  1090   001478  ECB3  F009         	call	_vfprintf	;wreg free
  1091   00147C  502A               	movf	sprintf@s^0,w,c
  1092   00147E  2436               	addwf	(sprintf@f+3)^0,w,c
  1093   001480  6ED9               	movwf	fsr2l,c
  1094   001482  6ADA               	clrf	fsr2h,c
  1095   001484  6ADF               	clrf	indf2,c
  1096   001486  0012               	return		;funcret
  1097   001488                     __end_of_sprintf:
  1098                           	callstack 0
  1099                           
  1100 ;; *************** function _vfprintf *****************
  1101 ;; Defined at:
  1102 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  fp              1   37[COMRAM] PTR struct _IO_FILE
  1105 ;;		 -> sprintf@f(12), 
  1106 ;;  fmt             1   38[COMRAM] PTR const unsigned char 
  1107 ;;		 -> STR_4(15), STR_3(15), STR_1(21), 
  1108 ;;  ap              1   39[COMRAM] PTR PTR void 
  1109 ;;		 -> sprintf@ap(1), 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  cfmt            1   40[COMRAM] PTR unsigned char 
  1112 ;;		 -> STR_4(15), STR_3(15), STR_1(21), 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  2   37[COMRAM] int 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1122 ;;      Params:         3       0       0       0       0       0       0       0       0
  1123 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1125 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1126 ;;Total ram usage:        4 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 6
  1129 ;; This function calls:
  1130 ;;		_vfpfcnvrt
  1131 ;; This function is called by:
  1132 ;;		_sprintf
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text2
  1137   001366                     __ptext2:
  1138                           	callstack 0
  1139   001366                     _vfprintf:
  1140                           	callstack 23
  1141   001366                     
  1142                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1143   001366  C027  F029         	movff	vfprintf@fmt,vfprintf@cfmt
  1144                           
  1145                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1146   00136A  EFBF  F009         	goto	l1911
  1147   00136E                     l1909:
  1148                           
  1149                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1150   00136E  C026  F01D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1151   001372  0E29               	movlw	low vfprintf@cfmt
  1152   001374  6E1E               	movwf	vfpfcnvrt@fmt^0,c
  1153   001376  C028  F01F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1154   00137A  EC99  F005         	call	_vfpfcnvrt	;wreg free
  1155   00137E                     l1911:
  1156                           
  1157                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1158   00137E  C029  FFF6         	movff	vfprintf@cfmt,tblptrl
  1159   001382                     	if	1	;There is more than 1 active tblptr byte
  1160   001382  0E08               	movlw	high __smallconst
  1161   001384  6EF7               	movwf	tblptrh,c
  1162   001386                     	endif
  1163   001386                     	if	0	;tblptru may be non-zero
  1164   001386                     	endif
  1165   001386                     	if	0	;tblptru may be non-zero
  1166   001386                     	endif
  1167   001386  0008               	tblrd		*
  1168   001388  50F5               	movf	tablat,w,c
  1169   00138A  0900               	iorlw	0
  1170   00138C  A4D8               	btfss	status,2,c
  1171   00138E  EFCB  F009         	goto	u1071
  1172   001392  EFCD  F009         	goto	u1070
  1173   001396                     u1071:
  1174   001396  EFB7  F009         	goto	l1909
  1175   00139A                     u1070:
  1176   00139A                     
  1177                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1178   00139A  0E00               	movlw	0
  1179   00139C  6E27               	movwf	(?_vfprintf+1)^0,c
  1180   00139E  0E00               	movlw	0
  1181   0013A0  6E26               	movwf	?_vfprintf^0,c
  1182   0013A2  0012               	return		;funcret
  1183   0013A4                     __end_of_vfprintf:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _vfpfcnvrt *****************
  1187 ;; Defined at:
  1188 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  fp              1   28[COMRAM] PTR struct _IO_FILE
  1191 ;;		 -> sprintf@f(12), 
  1192 ;;  fmt             1   29[COMRAM] PTR PTR unsigned char 
  1193 ;;		 -> vfprintf@cfmt(1), 
  1194 ;;  ap              1   30[COMRAM] PTR PTR void 
  1195 ;;		 -> sprintf@ap(1), 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  convarg         4   31[COMRAM] struct .
  1198 ;;  cp              1   36[COMRAM] PTR unsigned char 
  1199 ;;		 -> STR_4(15), STR_3(15), STR_1(21), 
  1200 ;;  done            1   35[COMRAM] _Bool 
  1201 ;;  c               1    0        unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1211 ;;      Params:         3       0       0       0       0       0       0       0       0
  1212 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1214 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1215 ;;Total ram usage:        9 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 5
  1218 ;; This function calls:
  1219 ;;		_fputc
  1220 ;;		_read_prec_or_width
  1221 ;;		_utoa
  1222 ;; This function is called by:
  1223 ;;		_vfprintf
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text3
  1228   000B32                     __ptext3:
  1229                           	callstack 0
  1230   000B32                     _vfpfcnvrt:
  1231                           	callstack 23
  1232   000B32                     
  1233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1234   000B32  501E               	movf	vfpfcnvrt@fmt^0,w,c
  1235   000B34  6ED9               	movwf	fsr2l,c
  1236   000B36  6ADA               	clrf	fsr2h,c
  1237   000B38  CFDF FFF6          	movff	indf2,tblptrl
  1238   000B3C                     	if	1	;There is more than 1 active tblptr byte
  1239   000B3C  0E08               	movlw	high __smallconst
  1240   000B3E  6EF7               	movwf	tblptrh,c
  1241   000B40                     	endif
  1242   000B40                     	if	0	;tblptru may be non-zero
  1243   000B40                     	endif
  1244   000B40                     	if	0	;tblptru may be non-zero
  1245   000B40                     	endif
  1246   000B40  0008               	tblrd		*
  1247   000B42  50F5               	movf	tablat,w,c
  1248   000B44  0A25               	xorlw	37
  1249   000B46  A4D8               	btfss	status,2,c
  1250   000B48  EFA8  F005         	goto	u1031
  1251   000B4C  EFAA  F005         	goto	u1030
  1252   000B50                     u1031:
  1253   000B50  EF34  F006         	goto	l1837
  1254   000B54                     u1030:
  1255   000B54                     
  1256                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1257   000B54  501E               	movf	vfpfcnvrt@fmt^0,w,c
  1258   000B56  6ED9               	movwf	fsr2l,c
  1259   000B58  6ADA               	clrf	fsr2h,c
  1260   000B5A  2ADF               	incf	indf2,f,c
  1261   000B5C                     
  1262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1263   000B5C  0E00               	movlw	0
  1264   000B5E  6E42               	movwf	(_width+1)^0,c
  1265   000B60  0E00               	movlw	0
  1266   000B62  6E41               	movwf	_width^0,c
  1267   000B64  C041  F045         	movff	_width,_flags
  1268   000B68                     
  1269                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1270   000B68  6843               	setf	_prec^0,c
  1271   000B6A  6844               	setf	(_prec+1)^0,c
  1272   000B6C                     
  1273                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1274   000B6C  0E00               	movlw	0
  1275   000B6E  6E24               	movwf	vfpfcnvrt@done^0,c
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1278   000B70  EFD4  F005         	goto	l1809
  1279   000B74                     l1799:
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1282   000B74  8245               	bsf	_flags^0,1,c
  1283   000B76                     
  1284                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1285   000B76  501E               	movf	vfpfcnvrt@fmt^0,w,c
  1286   000B78  6ED9               	movwf	fsr2l,c
  1287   000B7A  6ADA               	clrf	fsr2h,c
  1288   000B7C  2ADF               	incf	indf2,f,c
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1291   000B7E  EFD4  F005         	goto	l1809
  1292   000B82                     l1803:
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1295   000B82  0E01               	movlw	1
  1296   000B84  6E24               	movwf	vfpfcnvrt@done^0,c
  1297                           
  1298                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1299   000B86  EFD4  F005         	goto	l1809
  1300   000B8A                     l1807:
  1301   000B8A  501E               	movf	vfpfcnvrt@fmt^0,w,c
  1302   000B8C  6ED9               	movwf	fsr2l,c
  1303   000B8E  6ADA               	clrf	fsr2h,c
  1304   000B90  CFDF FFF6          	movff	indf2,tblptrl
  1305   000B94                     	if	1	;There is more than 1 active tblptr byte
  1306   000B94  0E08               	movlw	high __smallconst
  1307   000B96  6EF7               	movwf	tblptrh,c
  1308   000B98                     	endif
  1309   000B98                     	if	0	;tblptru may be non-zero
  1310   000B98                     	endif
  1311   000B98                     	if	0	;tblptru may be non-zero
  1312   000B98                     	endif
  1313   000B98  0008               	tblrd		*
  1314   000B9A  50F5               	movf	tablat,w,c
  1315                           
  1316                           ; Switch size 1, requested type "simple"
  1317                           ; Number of cases is 1, Range of values is 48 to 48
  1318                           ; switch strategies available:
  1319                           ; Name         Instructions Cycles
  1320                           ; simple_byte            4     3 (average)
  1321                           ;	Chosen strategy is simple_byte
  1322   000B9C  0A30               	xorlw	48	; case 48
  1323   000B9E  B4D8               	btfsc	status,2,c
  1324   000BA0  EFBA  F005         	goto	l1799
  1325   000BA4  EFC1  F005         	goto	l1803
  1326   000BA8                     l1809:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1329   000BA8  5024               	movf	vfpfcnvrt@done^0,w,c
  1330   000BAA  B4D8               	btfsc	status,2,c
  1331   000BAC  EFDA  F005         	goto	u1041
  1332   000BB0  EFDC  F005         	goto	u1040
  1333   000BB4                     u1041:
  1334   000BB4  EFC5  F005         	goto	l1807
  1335   000BB8                     u1040:
  1336   000BB8                     
  1337                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1338   000BB8  C01E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1339   000BBC  C01F  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1340   000BC0  EC63  F007         	call	_read_prec_or_width	;wreg free
  1341   000BC4  C007  F041         	movff	?_read_prec_or_width,_width
  1342   000BC8  C008  F042         	movff	?_read_prec_or_width+1,_width+1
  1343   000BCC                     
  1344                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1345   000BCC  BE42               	btfsc	(_width+1)^0,7,c
  1346   000BCE  EFED  F005         	goto	u1050
  1347   000BD2  EFEB  F005         	goto	u1051
  1348   000BD6                     u1051:
  1349   000BD6  EFF2  F005         	goto	l1817
  1350   000BDA                     u1050:
  1351   000BDA                     
  1352                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1353   000BDA  8045               	bsf	_flags^0,0,c
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1356   000BDC  6C41               	negf	_width^0,c
  1357   000BDE  1E42               	comf	(_width+1)^0,f,c
  1358   000BE0  B0D8               	btfsc	status,0,c
  1359   000BE2  2A42               	incf	(_width+1)^0,f,c
  1360   000BE4                     l1817:
  1361                           
  1362                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1363   000BE4  501E               	movf	vfpfcnvrt@fmt^0,w,c
  1364   000BE6  6ED9               	movwf	fsr2l,c
  1365   000BE8  6ADA               	clrf	fsr2h,c
  1366   000BEA  50DF               	movf	indf2,w,c
  1367   000BEC  6E25               	movwf	vfpfcnvrt@cp^0,c
  1368   000BEE  C025  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1369   000BF2                     	if	1	;There is more than 1 active tblptr byte
  1370   000BF2  0E08               	movlw	high __smallconst
  1371   000BF4  6EF7               	movwf	tblptrh,c
  1372   000BF6                     	endif
  1373   000BF6                     	if	0	;tblptru may be non-zero
  1374   000BF6                     	endif
  1375   000BF6                     	if	0	;tblptru may be non-zero
  1376   000BF6                     	endif
  1377   000BF6  0008               	tblrd		*
  1378   000BF8  50F5               	movf	tablat,w,c
  1379   000BFA  0A75               	xorlw	117
  1380   000BFC  A4D8               	btfss	status,2,c
  1381   000BFE  EF03  F006         	goto	u1061
  1382   000C02  EF05  F006         	goto	u1060
  1383   000C06                     u1061:
  1384   000C06  EF2E  F006         	goto	l1833
  1385   000C0A                     u1060:
  1386   000C0A                     
  1387                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1388   000C0A  501F               	movf	vfpfcnvrt@ap^0,w,c
  1389   000C0C  6ED9               	movwf	fsr2l,c
  1390   000C0E  6ADA               	clrf	fsr2h,c
  1391   000C10  0E02               	movlw	2
  1392   000C12  26DF               	addwf	indf2,f,c
  1393   000C14  5CDF               	subwf	indf2,w,c
  1394   000C16  6ED9               	movwf	fsr2l,c
  1395   000C18  6ADA               	clrf	fsr2h,c
  1396   000C1A  CFDE F020          	movff	postinc2,vfpfcnvrt@convarg
  1397   000C1E  CFDE F021          	movff	postinc2,vfpfcnvrt@convarg+1
  1398   000C22                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1400   000C22  501E               	movf	vfpfcnvrt@fmt^0,w,c
  1401   000C24  6ED9               	movwf	fsr2l,c
  1402   000C26  6ADA               	clrf	fsr2h,c
  1403   000C28  2825               	incf	vfpfcnvrt@cp^0,w,c
  1404   000C2A  6EDF               	movwf	indf2,c
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1407   000C2C  EF22  F006         	goto	l1831
  1408   000C30                     l1825:
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  1411   000C30  C01D  F015         	movff	vfpfcnvrt@fp,utoa@fp
  1412   000C34  C020  F016         	movff	vfpfcnvrt@convarg,utoa@d
  1413   000C38  C021  F017         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1414   000C3C  EC46  F006         	call	_utoa	;wreg free
  1415   000C40  EF45  F006         	goto	l1003
  1416   000C44                     l1831:
  1417   000C44  C025  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1418   000C48                     	if	1	;There is more than 1 active tblptr byte
  1419   000C48  0E08               	movlw	high __smallconst
  1420   000C4A  6EF7               	movwf	tblptrh,c
  1421   000C4C                     	endif
  1422   000C4C                     	if	0	;tblptru may be non-zero
  1423   000C4C                     	endif
  1424   000C4C                     	if	0	;tblptru may be non-zero
  1425   000C4C                     	endif
  1426   000C4C  0008               	tblrd		*
  1427   000C4E  50F5               	movf	tablat,w,c
  1428                           
  1429                           ; Switch size 1, requested type "simple"
  1430                           ; Number of cases is 1, Range of values is 117 to 117
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte            4     3 (average)
  1434                           ;	Chosen strategy is simple_byte
  1435   000C50  0A75               	xorlw	117	; case 117
  1436   000C52  B4D8               	btfsc	status,2,c
  1437   000C54  EF18  F006         	goto	l1825
  1438   000C58  EF2E  F006         	goto	l1833
  1439   000C5C                     l1833:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1442   000C5C  501E               	movf	vfpfcnvrt@fmt^0,w,c
  1443   000C5E  6ED9               	movwf	fsr2l,c
  1444   000C60  6ADA               	clrf	fsr2h,c
  1445   000C62  2ADF               	incf	indf2,f,c
  1446   000C64  EF45  F006         	goto	l1003
  1447   000C68                     l1837:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1450   000C68  501E               	movf	vfpfcnvrt@fmt^0,w,c
  1451   000C6A  6ED9               	movwf	fsr2l,c
  1452   000C6C  6ADA               	clrf	fsr2h,c
  1453   000C6E  CFDF FFF6          	movff	indf2,tblptrl
  1454   000C72                     	if	1	;There is more than 1 active tblptr byte
  1455   000C72  0E08               	movlw	high __smallconst
  1456   000C74  6EF7               	movwf	tblptrh,c
  1457   000C76                     	endif
  1458   000C76                     	if	0	;tblptru may be non-zero
  1459   000C76                     	endif
  1460   000C76                     	if	0	;tblptru may be non-zero
  1461   000C76                     	endif
  1462   000C76  0008               	tblrd		*
  1463   000C78  50F5               	movf	tablat,w,c
  1464   000C7A  6E01               	movwf	fputc@c^0,c
  1465   000C7C  6A02               	clrf	(fputc@c+1)^0,c
  1466   000C7E  C01D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1467   000C82  EC0E  F007         	call	_fputc	;wreg free
  1468   000C86  EF2E  F006         	goto	l1833
  1469   000C8A                     l1003:
  1470   000C8A  0012               	return		;funcret
  1471   000C8C                     __end_of_vfpfcnvrt:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _utoa *****************
  1475 ;; Defined at:
  1476 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  1479 ;;		 -> sprintf@f(12), 
  1480 ;;  d               2   21[COMRAM] unsigned int 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  i               2   26[COMRAM] int 
  1483 ;;  w               2   24[COMRAM] int 
  1484 ;;  p               1   23[COMRAM] _Bool 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1494 ;;      Params:         3       0       0       0       0       0       0       0       0
  1495 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1497 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1498 ;;Total ram usage:        8 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 4
  1501 ;; This function calls:
  1502 ;;		___lwdiv
  1503 ;;		___lwmod
  1504 ;;		_pad
  1505 ;; This function is called by:
  1506 ;;		_vfpfcnvrt
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text4
  1511   000C8C                     __ptext4:
  1512                           	callstack 0
  1513   000C8C                     _utoa:
  1514                           	callstack 23
  1515   000C8C                     
  1516                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  1517   000C8C  0E01               	movlw	1
  1518   000C8E  6E18               	movwf	utoa@p^0,c
  1519   000C90                     
  1520                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  1521   000C90  C041  F019         	movff	_width,utoa@w
  1522   000C94  C042  F01A         	movff	_width+1,utoa@w+1
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  1525   000C98  0E00               	movlw	0
  1526   000C9A  6E1C               	movwf	(utoa@i+1)^0,c
  1527   000C9C  0E1F               	movlw	31
  1528   000C9E  6E1B               	movwf	utoa@i^0,c
  1529   000CA0                     
  1530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  1531   000CA0  0E00               	movlw	0
  1532   000CA2  0100               	movlb	0	; () banked
  1533   000CA4  6F7F               	movwf	(_dbuf+31)& (0+255),b
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  1536   000CA6  EF7C  F006         	goto	l1721
  1537   000CAA                     l1711:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1034:         --i;
  1540   000CAA  061B               	decf	utoa@i^0,f,c
  1541   000CAC  A0D8               	btfss	status,0,c
  1542   000CAE  061C               	decf	(utoa@i+1)^0,f,c
  1543   000CB0                     
  1544                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  1545   000CB0  501B               	movf	utoa@i^0,w,c
  1546   000CB2  0F60               	addlw	low _dbuf
  1547   000CB4  6ED9               	movwf	fsr2l,c
  1548   000CB6  6ADA               	clrf	fsr2h,c
  1549   000CB8  C016  F001         	movff	utoa@d,___lwmod@dividend
  1550   000CBC  C017  F002         	movff	utoa@d+1,___lwmod@dividend+1
  1551   000CC0  0E00               	movlw	0
  1552   000CC2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1553   000CC4  0E0A               	movlw	10
  1554   000CC6  6E03               	movwf	___lwmod@divisor^0,c
  1555   000CC8  EC32  F009         	call	___lwmod	;wreg free
  1556   000CCC  5001               	movf	?___lwmod^0,w,c
  1557   000CCE  0F30               	addlw	48
  1558   000CD0  6EDF               	movwf	indf2,c
  1559   000CD2                     
  1560                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  1561   000CD2  0E00               	movlw	0
  1562   000CD4  6E18               	movwf	utoa@p^0,c
  1563   000CD6                     
  1564                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  1565   000CD6  0619               	decf	utoa@w^0,f,c
  1566   000CD8  A0D8               	btfss	status,0,c
  1567   000CDA  061A               	decf	(utoa@w+1)^0,f,c
  1568   000CDC                     
  1569                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  1570   000CDC  C016  F001         	movff	utoa@d,___lwdiv@dividend
  1571   000CE0  C017  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  1572   000CE4  0E00               	movlw	0
  1573   000CE6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1574   000CE8  0E0A               	movlw	10
  1575   000CEA  6E03               	movwf	___lwdiv@divisor^0,c
  1576   000CEC  ECBE  F008         	call	___lwdiv	;wreg free
  1577   000CF0  C001  F016         	movff	?___lwdiv,utoa@d
  1578   000CF4  C002  F017         	movff	?___lwdiv+1,utoa@d+1
  1579   000CF8                     l1721:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  1582   000CF8  501B               	movf	utoa@i^0,w,c
  1583   000CFA  101C               	iorwf	(utoa@i+1)^0,w,c
  1584   000CFC  B4D8               	btfsc	status,2,c
  1585   000CFE  EF83  F006         	goto	u891
  1586   000D02  EF85  F006         	goto	u890
  1587   000D06                     u891:
  1588   000D06  EFAA  F006         	goto	l1731
  1589   000D0A                     u890:
  1590   000D0A  5016               	movf	utoa@d^0,w,c
  1591   000D0C  1017               	iorwf	(utoa@d+1)^0,w,c
  1592   000D0E  A4D8               	btfss	status,2,c
  1593   000D10  EF8C  F006         	goto	u901
  1594   000D14  EF8E  F006         	goto	u900
  1595   000D18                     u901:
  1596   000D18  EF55  F006         	goto	l1711
  1597   000D1C                     u900:
  1598   000D1C  5018               	movf	utoa@p^0,w,c
  1599   000D1E  A4D8               	btfss	status,2,c
  1600   000D20  EF94  F006         	goto	u911
  1601   000D24  EF96  F006         	goto	u910
  1602   000D28                     u911:
  1603   000D28  EF55  F006         	goto	l1711
  1604   000D2C                     u910:
  1605   000D2C  BE1A               	btfsc	(utoa@w+1)^0,7,c
  1606   000D2E  EFA1  F006         	goto	u921
  1607   000D32  501A               	movf	(utoa@w+1)^0,w,c
  1608   000D34  E108               	bnz	u920
  1609   000D36  0419               	decf	utoa@w^0,w,c
  1610   000D38  A0D8               	btfss	status,0,c
  1611   000D3A  EFA1  F006         	goto	u921
  1612   000D3E  EFA3  F006         	goto	u920
  1613   000D42                     u921:
  1614   000D42  EFAA  F006         	goto	l1731
  1615   000D46                     u920:
  1616   000D46  B245               	btfsc	_flags^0,1,c
  1617   000D48  EFA8  F006         	goto	u931
  1618   000D4C  EFAA  F006         	goto	u930
  1619   000D50                     u931:
  1620   000D50  EF55  F006         	goto	l1711
  1621   000D54                     u930:
  1622   000D54                     l1731:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  1625   000D54  C015  F00E         	movff	utoa@fp,pad@fp
  1626   000D58  501B               	movf	utoa@i^0,w,c
  1627   000D5A  0F60               	addlw	low _dbuf
  1628   000D5C  6E0F               	movwf	pad@buf^0,c
  1629   000D5E  C019  F010         	movff	utoa@w,pad@p
  1630   000D62  C01A  F011         	movff	utoa@w+1,pad@p+1
  1631   000D66  ECB6  F007         	call	_pad	;wreg free
  1632   000D6A  0012               	return		;funcret
  1633   000D6C                     __end_of_utoa:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _pad *****************
  1637 ;; Defined at:
  1638 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1641 ;;		 -> sprintf@f(12), 
  1642 ;;  buf             1   14[COMRAM] PTR unsigned char 
  1643 ;;		 -> dbuf(32), 
  1644 ;;  p               2   15[COMRAM] int 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  i               2   18[COMRAM] int 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         4       0       0       0       0       0       0       0       0
  1657 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1658 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1659 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        7 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 3
  1663 ;; This function calls:
  1664 ;;		_fputc
  1665 ;;		_fputs
  1666 ;; This function is called by:
  1667 ;;		_utoa
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text5
  1672   000F6C                     __ptext5:
  1673                           	callstack 0
  1674   000F6C                     _pad:
  1675                           	callstack 23
  1676   000F6C                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1678   000F6C  A045               	btfss	_flags^0,0,c
  1679   000F6E  EFBB  F007         	goto	u811
  1680   000F72  EFBD  F007         	goto	u810
  1681   000F76                     u811:
  1682   000F76  EFC3  F007         	goto	l1677
  1683   000F7A                     u810:
  1684   000F7A                     
  1685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1686   000F7A  C00F  F009         	movff	pad@buf,fputs@s
  1687   000F7E  C00E  F00A         	movff	pad@fp,fputs@fp
  1688   000F82  ECD2  F009         	call	_fputs	;wreg free
  1689   000F86                     l1677:
  1690                           
  1691                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1692   000F86  BE11               	btfsc	(pad@p+1)^0,7,c
  1693   000F88  EFCA  F007         	goto	u820
  1694   000F8C  EFC8  F007         	goto	u821
  1695   000F90                     u821:
  1696   000F90  EFCE  F007         	goto	l963
  1697   000F94                     u820:
  1698   000F94                     
  1699                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1700   000F94  0E00               	movlw	0
  1701   000F96  6E11               	movwf	(pad@p+1)^0,c
  1702   000F98  0E00               	movlw	0
  1703   000F9A  6E10               	movwf	pad@p^0,c
  1704   000F9C                     l963:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1707   000F9C  0E00               	movlw	0
  1708   000F9E  6E14               	movwf	(pad@i+1)^0,c
  1709   000FA0  0E00               	movlw	0
  1710   000FA2  6E13               	movwf	pad@i^0,c
  1711                           
  1712                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1713   000FA4  EFDE  F007         	goto	l1685
  1714   000FA8                     l1681:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1717   000FA8  0E00               	movlw	0
  1718   000FAA  6E02               	movwf	(fputc@c+1)^0,c
  1719   000FAC  0E20               	movlw	32
  1720   000FAE  6E01               	movwf	fputc@c^0,c
  1721   000FB0  C00E  F003         	movff	pad@fp,fputc@fp
  1722   000FB4  EC0E  F007         	call	_fputc	;wreg free
  1723   000FB8                     
  1724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1725   000FB8  4A13               	infsnz	pad@i^0,f,c
  1726   000FBA  2A14               	incf	(pad@i+1)^0,f,c
  1727   000FBC                     l1685:
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1730   000FBC  5010               	movf	pad@p^0,w,c
  1731   000FBE  5C13               	subwf	pad@i^0,w,c
  1732   000FC0  5014               	movf	(pad@i+1)^0,w,c
  1733   000FC2  0A80               	xorlw	128
  1734   000FC4  6E12               	movwf	??_pad^0,c
  1735   000FC6  5011               	movf	(pad@p+1)^0,w,c
  1736   000FC8  0A80               	xorlw	128
  1737   000FCA  5812               	subwfb	??_pad^0,w,c
  1738   000FCC  A0D8               	btfss	status,0,c
  1739   000FCE  EFEB  F007         	goto	u831
  1740   000FD2  EFED  F007         	goto	u830
  1741   000FD6                     u831:
  1742   000FD6  EFD4  F007         	goto	l1681
  1743   000FDA                     u830:
  1744   000FDA                     
  1745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1746   000FDA  B045               	btfsc	_flags^0,0,c
  1747   000FDC  EFF2  F007         	goto	u841
  1748   000FE0  EFF4  F007         	goto	u840
  1749   000FE4                     u841:
  1750   000FE4  EFFA  F007         	goto	l968
  1751   000FE8                     u840:
  1752   000FE8                     
  1753                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1754   000FE8  C00F  F009         	movff	pad@buf,fputs@s
  1755   000FEC  C00E  F00A         	movff	pad@fp,fputs@fp
  1756   000FF0  ECD2  F009         	call	_fputs	;wreg free
  1757   000FF4                     l968:
  1758   000FF4  0012               	return		;funcret
  1759   000FF6                     __end_of_pad:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _fputs *****************
  1763 ;; Defined at:
  1764 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  s               1    8[COMRAM] PTR const unsigned char 
  1767 ;;		 -> dbuf(32), 
  1768 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  1769 ;;		 -> sprintf@f(12), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  i               2   11[COMRAM] int 
  1772 ;;  c               1   10[COMRAM] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2    8[COMRAM] int 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1785 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1786 ;;Total ram usage:        5 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 2
  1789 ;; This function calls:
  1790 ;;		_fputc
  1791 ;; This function is called by:
  1792 ;;		_pad
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text6
  1797   0013A4                     __ptext6:
  1798                           	callstack 0
  1799   0013A4                     _fputs:
  1800                           	callstack 23
  1801   0013A4  0E00               	movlw	0
  1802   0013A6  6E0D               	movwf	(fputs@i+1)^0,c
  1803   0013A8  0E00               	movlw	0
  1804   0013AA  6E0C               	movwf	fputs@i^0,c
  1805   0013AC  EFE1  F009         	goto	l1627
  1806   0013B0                     l1623:
  1807   0013B0  C00B  F001         	movff	fputs@c,fputc@c
  1808   0013B4  6A02               	clrf	(fputc@c+1)^0,c
  1809   0013B6  C00A  F003         	movff	fputs@fp,fputc@fp
  1810   0013BA  EC0E  F007         	call	_fputc	;wreg free
  1811   0013BE  4A0C               	infsnz	fputs@i^0,f,c
  1812   0013C0  2A0D               	incf	(fputs@i+1)^0,f,c
  1813   0013C2                     l1627:
  1814   0013C2  5009               	movf	fputs@s^0,w,c
  1815   0013C4  240C               	addwf	fputs@i^0,w,c
  1816   0013C6  6ED9               	movwf	fsr2l,c
  1817   0013C8  6ADA               	clrf	fsr2h,c
  1818   0013CA  50DF               	movf	indf2,w,c
  1819   0013CC  6E0B               	movwf	fputs@c^0,c
  1820   0013CE  500B               	movf	fputs@c^0,w,c
  1821   0013D0  A4D8               	btfss	status,2,c
  1822   0013D2  EFED  F009         	goto	u741
  1823   0013D6  EFEF  F009         	goto	u740
  1824   0013DA                     u741:
  1825   0013DA  EFD8  F009         	goto	l1623
  1826   0013DE                     u740:
  1827   0013DE  0012               	return		;funcret
  1828   0013E0                     __end_of_fputs:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _fputc *****************
  1832 ;; Defined at:
  1833 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  c               2    0[COMRAM] int 
  1836 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1837 ;;		 -> sprintf@f(12), 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2    0[COMRAM] int 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1849 ;;      Params:         3       0       0       0       0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1851 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1852 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1853 ;;Total ram usage:        8 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 1
  1856 ;; This function calls:
  1857 ;;		_putch
  1858 ;; This function is called by:
  1859 ;;		_pad
  1860 ;;		_vfpfcnvrt
  1861 ;;		_fputs
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text7
  1866   000E1C                     __ptext7:
  1867                           	callstack 0
  1868   000E1C                     _fputc:
  1869                           	callstack 23
  1870   000E1C  5003               	movf	fputc@fp^0,w,c
  1871   000E1E  B4D8               	btfsc	status,2,c
  1872   000E20  EF14  F007         	goto	u701
  1873   000E24  EF16  F007         	goto	u700
  1874   000E28                     u701:
  1875   000E28  EF1E  F007         	goto	l1611
  1876   000E2C                     u700:
  1877   000E2C  5003               	movf	fputc@fp^0,w,c
  1878   000E2E  A4D8               	btfss	status,2,c
  1879   000E30  EF1C  F007         	goto	u711
  1880   000E34  EF1E  F007         	goto	u710
  1881   000E38                     u711:
  1882   000E38  EF23  F007         	goto	l1613
  1883   000E3C                     u710:
  1884   000E3C                     l1611:
  1885   000E3C  5001               	movf	fputc@c^0,w,c
  1886   000E3E  EC01  F00B         	call	_putch
  1887   000E42  EF62  F007         	goto	l1022
  1888   000E46                     l1613:
  1889   000E46  5003               	movf	fputc@fp^0,w,c
  1890   000E48  6ED9               	movwf	fsr2l,c
  1891   000E4A  6ADA               	clrf	fsr2h,c
  1892   000E4C  0E0A               	movlw	10
  1893   000E4E  26D9               	addwf	fsr2l,f,c
  1894   000E50  50DE               	movf	postinc2,w,c
  1895   000E52  10DE               	iorwf	postinc2,w,c
  1896   000E54  B4D8               	btfsc	status,2,c
  1897   000E56  EF2F  F007         	goto	u721
  1898   000E5A  EF31  F007         	goto	u720
  1899   000E5E                     u721:
  1900   000E5E  EF4A  F007         	goto	l1617
  1901   000E62                     u720:
  1902   000E62  5003               	movf	fputc@fp^0,w,c
  1903   000E64  6ED9               	movwf	fsr2l,c
  1904   000E66  6ADA               	clrf	fsr2h,c
  1905   000E68  0E0A               	movlw	10
  1906   000E6A  26D9               	addwf	fsr2l,f,c
  1907   000E6C  5003               	movf	fputc@fp^0,w,c
  1908   000E6E  6EE1               	movwf	fsr1l,c
  1909   000E70  6AE2               	clrf	fsr1h,c
  1910   000E72  0E03               	movlw	3
  1911   000E74  26E1               	addwf	fsr1l,f,c
  1912   000E76  50DE               	movf	postinc2,w,c
  1913   000E78  5CE6               	subwf	postinc1,w,c
  1914   000E7A  50E6               	movf	postinc1,w,c
  1915   000E7C  0A80               	xorlw	128
  1916   000E7E  6E08               	movwf	(??_fputc+4)^0,c
  1917   000E80  50DE               	movf	postinc2,w,c
  1918   000E82  0A80               	xorlw	128
  1919   000E84  5808               	subwfb	(??_fputc+4)^0,w,c
  1920   000E86  B0D8               	btfsc	status,0,c
  1921   000E88  EF48  F007         	goto	u731
  1922   000E8C  EF4A  F007         	goto	u730
  1923   000E90                     u731:
  1924   000E90  EF62  F007         	goto	l1022
  1925   000E94                     u730:
  1926   000E94                     l1617:
  1927   000E94  5003               	movf	fputc@fp^0,w,c
  1928   000E96  6ED9               	movwf	fsr2l,c
  1929   000E98  6ADA               	clrf	fsr2h,c
  1930   000E9A  0E03               	movlw	3
  1931   000E9C  26D9               	addwf	fsr2l,f,c
  1932   000E9E  50DF               	movf	indf2,w,c
  1933   000EA0  6E04               	movwf	??_fputc^0,c
  1934   000EA2  5003               	movf	fputc@fp^0,w,c
  1935   000EA4  6ED9               	movwf	fsr2l,c
  1936   000EA6  6ADA               	clrf	fsr2h,c
  1937   000EA8  50DF               	movf	indf2,w,c
  1938   000EAA  2404               	addwf	??_fputc^0,w,c
  1939   000EAC  6ED9               	movwf	fsr2l,c
  1940   000EAE  6ADA               	clrf	fsr2h,c
  1941   000EB0  C001  FFDF         	movff	fputc@c,indf2
  1942   000EB4  5003               	movf	fputc@fp^0,w,c
  1943   000EB6  6ED9               	movwf	fsr2l,c
  1944   000EB8  6ADA               	clrf	fsr2h,c
  1945   000EBA  0E03               	movlw	3
  1946   000EBC  26D9               	addwf	fsr2l,f,c
  1947   000EBE  2ADE               	incf	postinc2,f,c
  1948   000EC0  0E00               	movlw	0
  1949   000EC2  22DD               	addwfc	postdec2,f,c
  1950   000EC4                     l1022:
  1951   000EC4  0012               	return		;funcret
  1952   000EC6                     __end_of_fputc:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _putch *****************
  1956 ;; Defined at:
  1957 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  c               1    wreg     unsigned char 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  c               1    0[COMRAM] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_fputc
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text8
  1985   001602                     __ptext8:
  1986                           	callstack 0
  1987   001602                     _putch:
  1988                           	callstack 23
  1989   001602  0012               	return		;funcret
  1990   001604                     __end_of_putch:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function ___lwmod *****************
  1994 ;; Defined at:
  1995 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  dividend        2    0[COMRAM] unsigned int 
  1998 ;;  divisor         2    2[COMRAM] unsigned int 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  counter         1    4[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  2    0[COMRAM] unsigned int 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2010 ;;      Params:         4       0       0       0       0       0       0       0       0
  2011 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2013 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2014 ;;Total ram usage:        5 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_utoa
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text9
  2024   001264                     __ptext9:
  2025                           	callstack 0
  2026   001264                     ___lwmod:
  2027                           	callstack 26
  2028   001264  5003               	movf	___lwmod@divisor^0,w,c
  2029   001266  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2030   001268  B4D8               	btfsc	status,2,c
  2031   00126A  EF39  F009         	goto	u781
  2032   00126E  EF3B  F009         	goto	u780
  2033   001272                     u781:
  2034   001272  EF5F  F009         	goto	l768
  2035   001276                     u780:
  2036   001276  0E01               	movlw	1
  2037   001278  6E05               	movwf	___lwmod@counter^0,c
  2038   00127A  EF43  F009         	goto	l1663
  2039   00127E                     l1661:
  2040   00127E  90D8               	bcf	status,0,c
  2041   001280  3603               	rlcf	___lwmod@divisor^0,f,c
  2042   001282  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2043   001284  2A05               	incf	___lwmod@counter^0,f,c
  2044   001286                     l1663:
  2045   001286  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2046   001288  EF48  F009         	goto	u791
  2047   00128C  EF4A  F009         	goto	u790
  2048   001290                     u791:
  2049   001290  EF3F  F009         	goto	l1661
  2050   001294                     u790:
  2051   001294                     l1665:
  2052   001294  5003               	movf	___lwmod@divisor^0,w,c
  2053   001296  5C01               	subwf	___lwmod@dividend^0,w,c
  2054   001298  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2055   00129A  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2056   00129C  A0D8               	btfss	status,0,c
  2057   00129E  EF53  F009         	goto	u801
  2058   0012A2  EF55  F009         	goto	u800
  2059   0012A6                     u801:
  2060   0012A6  EF59  F009         	goto	l1669
  2061   0012AA                     u800:
  2062   0012AA  5003               	movf	___lwmod@divisor^0,w,c
  2063   0012AC  5E01               	subwf	___lwmod@dividend^0,f,c
  2064   0012AE  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2065   0012B0  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2066   0012B2                     l1669:
  2067   0012B2  90D8               	bcf	status,0,c
  2068   0012B4  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2069   0012B6  3203               	rrcf	___lwmod@divisor^0,f,c
  2070   0012B8  2E05               	decfsz	___lwmod@counter^0,f,c
  2071   0012BA  EF4A  F009         	goto	l1665
  2072   0012BE                     l768:
  2073   0012BE  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2074   0012C2  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2075   0012C6  0012               	return		;funcret
  2076   0012C8                     __end_of___lwmod:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function ___lwdiv *****************
  2080 ;; Defined at:
  2081 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  dividend        2    0[COMRAM] unsigned int 
  2084 ;;  divisor         2    2[COMRAM] unsigned int 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  quotient        2    4[COMRAM] unsigned int 
  2087 ;;  counter         1    6[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2    0[COMRAM] unsigned int 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2097 ;;      Params:         4       0       0       0       0       0       0       0       0
  2098 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2100 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2101 ;;Total ram usage:        7 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_utoa
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text10
  2111   00117C                     __ptext10:
  2112                           	callstack 0
  2113   00117C                     ___lwdiv:
  2114                           	callstack 26
  2115   00117C  0E00               	movlw	0
  2116   00117E  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2117   001180  0E00               	movlw	0
  2118   001182  6E05               	movwf	___lwdiv@quotient^0,c
  2119   001184  5003               	movf	___lwdiv@divisor^0,w,c
  2120   001186  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2121   001188  B4D8               	btfsc	status,2,c
  2122   00118A  EFC9  F008         	goto	u751
  2123   00118E  EFCB  F008         	goto	u750
  2124   001192                     u751:
  2125   001192  EFF3  F008         	goto	l758
  2126   001196                     u750:
  2127   001196  0E01               	movlw	1
  2128   001198  6E07               	movwf	___lwdiv@counter^0,c
  2129   00119A  EFD3  F008         	goto	l1643
  2130   00119E                     l1641:
  2131   00119E  90D8               	bcf	status,0,c
  2132   0011A0  3603               	rlcf	___lwdiv@divisor^0,f,c
  2133   0011A2  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2134   0011A4  2A07               	incf	___lwdiv@counter^0,f,c
  2135   0011A6                     l1643:
  2136   0011A6  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2137   0011A8  EFD8  F008         	goto	u761
  2138   0011AC  EFDA  F008         	goto	u760
  2139   0011B0                     u761:
  2140   0011B0  EFCF  F008         	goto	l1641
  2141   0011B4                     u760:
  2142   0011B4                     l1645:
  2143   0011B4  90D8               	bcf	status,0,c
  2144   0011B6  3605               	rlcf	___lwdiv@quotient^0,f,c
  2145   0011B8  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2146   0011BA  5003               	movf	___lwdiv@divisor^0,w,c
  2147   0011BC  5C01               	subwf	___lwdiv@dividend^0,w,c
  2148   0011BE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2149   0011C0  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2150   0011C2  A0D8               	btfss	status,0,c
  2151   0011C4  EFE6  F008         	goto	u771
  2152   0011C8  EFE8  F008         	goto	u770
  2153   0011CC                     u771:
  2154   0011CC  EFED  F008         	goto	l1653
  2155   0011D0                     u770:
  2156   0011D0  5003               	movf	___lwdiv@divisor^0,w,c
  2157   0011D2  5E01               	subwf	___lwdiv@dividend^0,f,c
  2158   0011D4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2159   0011D6  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2160   0011D8  8005               	bsf	___lwdiv@quotient^0,0,c
  2161   0011DA                     l1653:
  2162   0011DA  90D8               	bcf	status,0,c
  2163   0011DC  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2164   0011DE  3203               	rrcf	___lwdiv@divisor^0,f,c
  2165   0011E0  2E07               	decfsz	___lwdiv@counter^0,f,c
  2166   0011E2  EFDA  F008         	goto	l1645
  2167   0011E6                     l758:
  2168   0011E6  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2169   0011EA  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2170   0011EE  0012               	return		;funcret
  2171   0011F0                     __end_of___lwdiv:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _read_prec_or_width *****************
  2175 ;; Defined at:
  2176 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2179 ;;		 -> vfprintf@cfmt(1), 
  2180 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2181 ;;		 -> sprintf@ap(1), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  c               1    8[COMRAM] unsigned char 
  2184 ;;  n               2    9[COMRAM] int 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  2    6[COMRAM] int 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2194 ;;      Params:         2       0       0       0       0       0       0       0       0
  2195 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2197 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2198 ;;Total ram usage:        5 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 1
  2201 ;; This function calls:
  2202 ;;		___wmul
  2203 ;; This function is called by:
  2204 ;;		_vfpfcnvrt
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text11
  2209   000EC6                     __ptext11:
  2210                           	callstack 0
  2211   000EC6                     _read_prec_or_width:
  2212                           	callstack 26
  2213   000EC6                     
  2214                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2215   000EC6  0E00               	movlw	0
  2216   000EC8  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2217   000ECA  0E00               	movlw	0
  2218   000ECC  6E0A               	movwf	read_prec_or_width@n^0,c
  2219   000ECE                     
  2220                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2221   000ECE  5007               	movf	read_prec_or_width@fmt^0,w,c
  2222   000ED0  6ED9               	movwf	fsr2l,c
  2223   000ED2  6ADA               	clrf	fsr2h,c
  2224   000ED4  CFDF FFF6          	movff	indf2,tblptrl
  2225   000ED8                     	if	1	;There is more than 1 active tblptr byte
  2226   000ED8  0E08               	movlw	high __smallconst
  2227   000EDA  6EF7               	movwf	tblptrh,c
  2228   000EDC                     	endif
  2229   000EDC                     	if	0	;tblptru may be non-zero
  2230   000EDC                     	endif
  2231   000EDC                     	if	0	;tblptru may be non-zero
  2232   000EDC                     	endif
  2233   000EDC  0008               	tblrd		*
  2234   000EDE  50F5               	movf	tablat,w,c
  2235   000EE0  0A2A               	xorlw	42
  2236   000EE2  A4D8               	btfss	status,2,c
  2237   000EE4  EF76  F007         	goto	u941
  2238   000EE8  EF78  F007         	goto	u940
  2239   000EEC                     u941:
  2240   000EEC  EF9E  F007         	goto	l1747
  2241   000EF0                     u940:
  2242   000EF0                     
  2243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2244   000EF0  5007               	movf	read_prec_or_width@fmt^0,w,c
  2245   000EF2  6ED9               	movwf	fsr2l,c
  2246   000EF4  6ADA               	clrf	fsr2h,c
  2247   000EF6  2ADF               	incf	indf2,f,c
  2248   000EF8                     
  2249                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2250   000EF8  5008               	movf	read_prec_or_width@ap^0,w,c
  2251   000EFA  6ED9               	movwf	fsr2l,c
  2252   000EFC  6ADA               	clrf	fsr2h,c
  2253   000EFE  0E02               	movlw	2
  2254   000F00  26DF               	addwf	indf2,f,c
  2255   000F02  5CDF               	subwf	indf2,w,c
  2256   000F04  6ED9               	movwf	fsr2l,c
  2257   000F06  6ADA               	clrf	fsr2h,c
  2258   000F08  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2259   000F0C  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2262   000F10  EFB1  F007         	goto	l982
  2263   000F14                     l1743:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2266   000F14  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2267   000F18  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2268   000F1C  0E00               	movlw	0
  2269   000F1E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2270   000F20  0E0A               	movlw	10
  2271   000F22  6E03               	movwf	___wmul@multiplicand^0,c
  2272   000F24  EC72  F00A         	call	___wmul	;wreg free
  2273   000F28  5009               	movf	read_prec_or_width@c^0,w,c
  2274   000F2A  2401               	addwf	?___wmul^0,w,c
  2275   000F2C  6E0A               	movwf	read_prec_or_width@n^0,c
  2276   000F2E  0E00               	movlw	0
  2277   000F30  2002               	addwfc	(?___wmul+1)^0,w,c
  2278   000F32  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2279   000F34                     
  2280                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2281   000F34  5007               	movf	read_prec_or_width@fmt^0,w,c
  2282   000F36  6ED9               	movwf	fsr2l,c
  2283   000F38  6ADA               	clrf	fsr2h,c
  2284   000F3A  2ADF               	incf	indf2,f,c
  2285   000F3C                     l1747:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2288   000F3C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2289   000F3E  6ED9               	movwf	fsr2l,c
  2290   000F40  6ADA               	clrf	fsr2h,c
  2291   000F42  CFDF FFF6          	movff	indf2,tblptrl
  2292   000F46                     	if	1	;There is more than 1 active tblptr byte
  2293   000F46  0E08               	movlw	high __smallconst
  2294   000F48  6EF7               	movwf	tblptrh,c
  2295   000F4A                     	endif
  2296   000F4A                     	if	0	;tblptru may be non-zero
  2297   000F4A                     	endif
  2298   000F4A                     	if	0	;tblptru may be non-zero
  2299   000F4A                     	endif
  2300   000F4A  0008               	tblrd		*
  2301   000F4C  50F5               	movf	tablat,w,c
  2302   000F4E  0FD0               	addlw	208
  2303   000F50  6E09               	movwf	read_prec_or_width@c^0,c
  2304   000F52  0E09               	movlw	9
  2305   000F54  6409               	cpfsgt	read_prec_or_width@c^0,c
  2306   000F56  EFAF  F007         	goto	u951
  2307   000F5A  EFB1  F007         	goto	u950
  2308   000F5E                     u951:
  2309   000F5E  EF8A  F007         	goto	l1743
  2310   000F62                     u950:
  2311   000F62                     l982:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2314   000F62  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2315   000F66  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2316   000F6A  0012               	return		;funcret
  2317   000F6C                     __end_of_read_prec_or_width:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function ___wmul *****************
  2321 ;; Defined at:
  2322 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  multiplier      2    0[COMRAM] unsigned int 
  2325 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  product         2    4[COMRAM] unsigned int 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2    0[COMRAM] unsigned int 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, prodl, prodh
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2337 ;;      Params:         4       0       0       0       0       0       0       0       0
  2338 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2340 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2341 ;;Total ram usage:        6 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_read_prec_or_width
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text12
  2351   0014E4                     __ptext12:
  2352                           	callstack 0
  2353   0014E4                     ___wmul:
  2354                           	callstack 26
  2355   0014E4  5001               	movf	___wmul@multiplier^0,w,c
  2356   0014E6  0203               	mulwf	___wmul@multiplicand^0,c
  2357   0014E8  CFF3 F005          	movff	prodl,___wmul@product
  2358   0014EC  CFF4 F006          	movff	prodh,___wmul@product+1
  2359   0014F0  5001               	movf	___wmul@multiplier^0,w,c
  2360   0014F2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2361   0014F4  50F3               	movf	243,w,c
  2362   0014F6  2606               	addwf	(___wmul@product+1)^0,f,c
  2363   0014F8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2364   0014FA  0203               	mulwf	___wmul@multiplicand^0,c
  2365   0014FC  50F3               	movf	243,w,c
  2366   0014FE  2606               	addwf	(___wmul@product+1)^0,f,c
  2367   001500  C005  F001         	movff	___wmul@product,?___wmul
  2368   001504  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2369   001508  0012               	return		;funcret
  2370   00150A                     __end_of___wmul:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _inicializarHoraColombia *****************
  2374 ;; Defined at:
  2375 ;;		line 66 in file "RTC_Set_Data.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 2
  2396 ;; This function calls:
  2397 ;;		_DS3231_Set_Date_Time
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text13
  2404   0015E4                     __ptext13:
  2405                           	callstack 0
  2406   0015E4                     _inicializarHoraColombia:
  2407                           	callstack 28
  2408   0015E4                     
  2409                           ;RTC_Set_Data.c: 67:     DS3231_Set_Date_Time(10, 30, 0);
  2410   0015E4  0E1E               	movlw	30
  2411   0015E6  6E04               	movwf	DS3231_Set_Date_Time@mn^0,c
  2412   0015E8  0E00               	movlw	0
  2413   0015EA  6E05               	movwf	DS3231_Set_Date_Time@sc^0,c
  2414   0015EC  0E0A               	movlw	10
  2415   0015EE  ECF0  F009         	call	_DS3231_Set_Date_Time
  2416   0015F2  0012               	return		;funcret
  2417   0015F4                     __end_of_inicializarHoraColombia:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _DS3231_Set_Date_Time *****************
  2421 ;; Defined at:
  2422 ;;		line 15 in file "ds3231.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  hr              1    wreg     unsigned char 
  2425 ;;  mn              1    3[COMRAM] unsigned char 
  2426 ;;  sc              1    4[COMRAM] unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  hr              1    5[COMRAM] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         2       0       0       0       0       0       0       0       0
  2439 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2442 ;;Total ram usage:        3 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 1
  2445 ;; This function calls:
  2446 ;;		_DS3231_Bin_Bcd
  2447 ;;		_I2C_Start
  2448 ;;		_I2C_Stop
  2449 ;;		_I2C_Write
  2450 ;; This function is called by:
  2451 ;;		_inicializarHoraColombia
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text14
  2456   0013E0                     __ptext14:
  2457                           	callstack 0
  2458   0013E0                     _DS3231_Set_Date_Time:
  2459                           	callstack 28
  2460                           
  2461                           ;incstack = 0
  2462                           ;DS3231_Set_Date_Time@hr stored from wreg
  2463   0013E0  6E06               	movwf	DS3231_Set_Date_Time@hr^0,c
  2464   0013E2                     
  2465                           ;ds3231.c: 15: void DS3231_Set_Date_Time(uint8_t hr, uint8_t mn, uint8_t sc);ds3231.c: 1
      +                          8: {;ds3231.c: 19:     sc &= 0x7F;
  2466   0013E2  9E05               	bcf	DS3231_Set_Date_Time@sc^0,7,c
  2467   0013E4                     
  2468                           ;ds3231.c: 20:     hr &= 0x3F;
  2469   0013E4  0E3F               	movlw	63
  2470   0013E6  1606               	andwf	DS3231_Set_Date_Time@hr^0,f,c
  2471   0013E8                     
  2472                           ;ds3231.c: 22:     I2C_Start();
  2473   0013E8  ECDE  F00A         	call	_I2C_Start	;wreg free
  2474                           
  2475                           ;ds3231.c: 23:     I2C_Write(0xD0);
  2476   0013EC  0ED0               	movlw	208
  2477   0013EE  ECA6  F00A         	call	_I2C_Write
  2478                           
  2479                           ;ds3231.c: 24:     I2C_Write(0x00);
  2480   0013F2  0E00               	movlw	0
  2481   0013F4  ECA6  F00A         	call	_I2C_Write
  2482   0013F8                     
  2483                           ;ds3231.c: 25:     I2C_Write(DS3231_Bin_Bcd(sc));
  2484   0013F8  5005               	movf	DS3231_Set_Date_Time@sc^0,w,c
  2485   0013FA  EC44  F00A         	call	_DS3231_Bin_Bcd
  2486   0013FE  ECA6  F00A         	call	_I2C_Write
  2487   001402                     
  2488                           ;ds3231.c: 26:     I2C_Write(DS3231_Bin_Bcd(mn));
  2489   001402  5004               	movf	DS3231_Set_Date_Time@mn^0,w,c
  2490   001404  EC44  F00A         	call	_DS3231_Bin_Bcd
  2491   001408  ECA6  F00A         	call	_I2C_Write
  2492   00140C                     
  2493                           ;ds3231.c: 27:     I2C_Write(DS3231_Bin_Bcd(hr));
  2494   00140C  5006               	movf	DS3231_Set_Date_Time@hr^0,w,c
  2495   00140E  EC44  F00A         	call	_DS3231_Bin_Bcd
  2496   001412  ECA6  F00A         	call	_I2C_Write
  2497   001416                     
  2498                           ;ds3231.c: 28:     I2C_Stop();
  2499   001416  ECD4  F00A         	call	_I2C_Stop	;wreg free
  2500   00141A  0012               	return		;funcret
  2501   00141C                     __end_of_DS3231_Set_Date_Time:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _DS3231_Bin_Bcd *****************
  2505 ;; Defined at:
  2506 ;;		line 97 in file "ds3231.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  binary_value    1    wreg     unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  binary_value    1    0[COMRAM] unsigned char 
  2511 ;;  temp            1    2[COMRAM] unsigned char 
  2512 ;;  retval          1    1[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      unsigned char 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0
  2523 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2525 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2526 ;;Total ram usage:        3 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_DS3231_Set_Date_Time
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text15
  2536   001488                     __ptext15:
  2537                           	callstack 0
  2538   001488                     _DS3231_Bin_Bcd:
  2539                           	callstack 28
  2540                           
  2541                           ;incstack = 0
  2542                           ;DS3231_Bin_Bcd@binary_value stored from wreg
  2543   001488  6E01               	movwf	DS3231_Bin_Bcd@binary_value^0,c
  2544   00148A                     
  2545                           ;ds3231.c: 97: uint8_t DS3231_Bin_Bcd(uint8_t binary_value);ds3231.c: 98: {;ds3231.c: 99
      +                          :     uint8_t temp;;ds3231.c: 100:     uint8_t retval;;ds3231.c: 101:     temp = binary_
      +                          value;
  2546   00148A  C001  F003         	movff	DS3231_Bin_Bcd@binary_value,DS3231_Bin_Bcd@temp
  2547   00148E                     
  2548                           ;ds3231.c: 102:     retval = 0;
  2549   00148E  0E00               	movlw	0
  2550   001490  6E02               	movwf	DS3231_Bin_Bcd@retval^0,c
  2551   001492                     l1757:
  2552                           
  2553                           ;ds3231.c: 104:     {;ds3231.c: 105:         if (temp >= 10)
  2554   001492  0E09               	movlw	9
  2555   001494  6403               	cpfsgt	DS3231_Bin_Bcd@temp^0,c
  2556   001496  EF4F  F00A         	goto	u981
  2557   00149A  EF51  F00A         	goto	u980
  2558   00149E                     u981:
  2559   00149E  EF57  F00A         	goto	l1761
  2560   0014A2                     u980:
  2561   0014A2                     
  2562                           ;ds3231.c: 106:         {;ds3231.c: 107:             temp -= 10;
  2563   0014A2  0E0A               	movlw	10
  2564   0014A4  5E03               	subwf	DS3231_Bin_Bcd@temp^0,f,c
  2565                           
  2566                           ;ds3231.c: 108:             retval += 0x10;
  2567   0014A6  0E10               	movlw	16
  2568   0014A8  2602               	addwf	DS3231_Bin_Bcd@retval^0,f,c
  2569                           
  2570                           ;ds3231.c: 109:         }
  2571   0014AA  EF49  F00A         	goto	l1757
  2572   0014AE                     l1761:
  2573                           
  2574                           ;ds3231.c: 111:         {;ds3231.c: 112:             retval += temp;
  2575   0014AE  5003               	movf	DS3231_Bin_Bcd@temp^0,w,c
  2576   0014B0  2602               	addwf	DS3231_Bin_Bcd@retval^0,f,c
  2577   0014B2                     
  2578                           ;ds3231.c: 116:     return retval;
  2579   0014B2  5002               	movf	DS3231_Bin_Bcd@retval^0,w,c
  2580   0014B4  0012               	return		;funcret
  2581   0014B6                     __end_of_DS3231_Bin_Bcd:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function ___awmod *****************
  2585 ;; Defined at:
  2586 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  dividend        2    0[COMRAM] int 
  2589 ;;  divisor         2    2[COMRAM] int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  sign            1    5[COMRAM] unsigned char 
  2592 ;;  counter         1    4[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  2    0[COMRAM] int 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2602 ;;      Params:         4       0       0       0       0       0       0       0       0
  2603 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2605 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2606 ;;Total ram usage:        6 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text16
  2616   000D6C                     __ptext16:
  2617                           	callstack 0
  2618   000D6C                     ___awmod:
  2619                           	callstack 30
  2620   000D6C  0E00               	movlw	0
  2621   000D6E  6E06               	movwf	___awmod@sign^0,c
  2622   000D70  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2623   000D72  EFBF  F006         	goto	u1180
  2624   000D76  EFBD  F006         	goto	u1181
  2625   000D7A                     u1181:
  2626   000D7A  EFC5  F006         	goto	l2023
  2627   000D7E                     u1180:
  2628   000D7E  6C01               	negf	___awmod@dividend^0,c
  2629   000D80  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2630   000D82  B0D8               	btfsc	status,0,c
  2631   000D84  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2632   000D86  0E01               	movlw	1
  2633   000D88  6E06               	movwf	___awmod@sign^0,c
  2634   000D8A                     l2023:
  2635   000D8A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2636   000D8C  EFCC  F006         	goto	u1190
  2637   000D90  EFCA  F006         	goto	u1191
  2638   000D94                     u1191:
  2639   000D94  EFD0  F006         	goto	l2027
  2640   000D98                     u1190:
  2641   000D98  6C03               	negf	___awmod@divisor^0,c
  2642   000D9A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2643   000D9C  B0D8               	btfsc	status,0,c
  2644   000D9E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2645   000DA0                     l2027:
  2646   000DA0  5003               	movf	___awmod@divisor^0,w,c
  2647   000DA2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2648   000DA4  B4D8               	btfsc	status,2,c
  2649   000DA6  EFD7  F006         	goto	u1201
  2650   000DAA  EFD9  F006         	goto	u1200
  2651   000DAE                     u1201:
  2652   000DAE  EFFD  F006         	goto	l2043
  2653   000DB2                     u1200:
  2654   000DB2  0E01               	movlw	1
  2655   000DB4  6E05               	movwf	___awmod@counter^0,c
  2656   000DB6  EFE1  F006         	goto	l2033
  2657   000DBA                     l2031:
  2658   000DBA  90D8               	bcf	status,0,c
  2659   000DBC  3603               	rlcf	___awmod@divisor^0,f,c
  2660   000DBE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2661   000DC0  2A05               	incf	___awmod@counter^0,f,c
  2662   000DC2                     l2033:
  2663   000DC2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2664   000DC4  EFE6  F006         	goto	u1211
  2665   000DC8  EFE8  F006         	goto	u1210
  2666   000DCC                     u1211:
  2667   000DCC  EFDD  F006         	goto	l2031
  2668   000DD0                     u1210:
  2669   000DD0                     l2035:
  2670   000DD0  5003               	movf	___awmod@divisor^0,w,c
  2671   000DD2  5C01               	subwf	___awmod@dividend^0,w,c
  2672   000DD4  5004               	movf	(___awmod@divisor+1)^0,w,c
  2673   000DD6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2674   000DD8  A0D8               	btfss	status,0,c
  2675   000DDA  EFF1  F006         	goto	u1221
  2676   000DDE  EFF3  F006         	goto	u1220
  2677   000DE2                     u1221:
  2678   000DE2  EFF7  F006         	goto	l2039
  2679   000DE6                     u1220:
  2680   000DE6  5003               	movf	___awmod@divisor^0,w,c
  2681   000DE8  5E01               	subwf	___awmod@dividend^0,f,c
  2682   000DEA  5004               	movf	(___awmod@divisor+1)^0,w,c
  2683   000DEC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2684   000DEE                     l2039:
  2685   000DEE  90D8               	bcf	status,0,c
  2686   000DF0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2687   000DF2  3203               	rrcf	___awmod@divisor^0,f,c
  2688   000DF4  2E05               	decfsz	___awmod@counter^0,f,c
  2689   000DF6  EFE8  F006         	goto	l2035
  2690   000DFA                     l2043:
  2691   000DFA  5006               	movf	___awmod@sign^0,w,c
  2692   000DFC  B4D8               	btfsc	status,2,c
  2693   000DFE  EF03  F007         	goto	u1231
  2694   000E02  EF05  F007         	goto	u1230
  2695   000E06                     u1231:
  2696   000E06  EF09  F007         	goto	l2047
  2697   000E0A                     u1230:
  2698   000E0A  6C01               	negf	___awmod@dividend^0,c
  2699   000E0C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2700   000E0E  B0D8               	btfsc	status,0,c
  2701   000E10  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2702   000E12                     l2047:
  2703   000E12  C001  F001         	movff	___awmod@dividend,?___awmod
  2704   000E16  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2705   000E1A  0012               	return		;funcret
  2706   000E1C                     __end_of___awmod:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function _Lcd_Write_String *****************
  2710 ;; Defined at:
  2711 ;;		line 107 in file "lcd.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  a               2    4[COMRAM] PTR const unsigned char 
  2714 ;;		 -> STR_2(17), buffer(20), 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  i               2    8[COMRAM] int 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         2       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2729 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        6 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 2
  2733 ;; This function calls:
  2734 ;;		_Lcd_Write_Char
  2735 ;; This function is called by:
  2736 ;;		_main
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text17
  2741   0010FE                     __ptext17:
  2742                           	callstack 0
  2743   0010FE                     _Lcd_Write_String:
  2744                           	callstack 28
  2745   0010FE                     
  2746                           ;lcd.c: 107: void Lcd_Write_String(const char *a);lcd.c: 108: {;lcd.c: 110:     int i;;l
      +                          cd.c: 111:     for (i = 0; a[i] != '\0'; i++)
  2747   0010FE  0E00               	movlw	0
  2748   001100  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  2749   001102  0E00               	movlw	0
  2750   001104  6E09               	movwf	Lcd_Write_String@i^0,c
  2751   001106  EF9F  F008         	goto	l1999
  2752   00110A                     l1995:
  2753                           
  2754                           ;lcd.c: 112:         Lcd_Write_Char(a[i]);
  2755   00110A  5009               	movf	Lcd_Write_String@i^0,w,c
  2756   00110C  2405               	addwf	Lcd_Write_String@a^0,w,c
  2757   00110E  6E07               	movwf	??_Lcd_Write_String^0,c
  2758   001110  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  2759   001112  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2760   001114  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  2761   001116  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2762   00111A  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2763   00111E  6AF8               	clrf	tblptru,c
  2764   001120  0E07               	movlw	(high __ramtop+-1)
  2765   001122  64F7               	cpfsgt	tblptrh,c
  2766   001124  D003               	bra	u1157
  2767   001126  0008               	tblrd		*
  2768   001128  50F5               	movf	tablat,w,c
  2769   00112A  D005               	bra	u1150
  2770   00112C                     u1157:
  2771   00112C  CFF6 FFE1          	movff	tblptrl,fsr1l
  2772   001130  CFF7 FFE2          	movff	tblptrh,fsr1h
  2773   001134  50E7               	movf	indf1,w,c
  2774   001136                     u1150:
  2775   001136  EC0E  F00A         	call	_Lcd_Write_Char
  2776   00113A  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  2777   00113C  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  2778   00113E                     l1999:
  2779   00113E  5009               	movf	Lcd_Write_String@i^0,w,c
  2780   001140  2405               	addwf	Lcd_Write_String@a^0,w,c
  2781   001142  6E07               	movwf	??_Lcd_Write_String^0,c
  2782   001144  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  2783   001146  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2784   001148  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  2785   00114A  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  2786   00114E  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  2787   001152  6AF8               	clrf	tblptru,c
  2788   001154  0E07               	movlw	(high __ramtop+-1)
  2789   001156  64F7               	cpfsgt	tblptrh,c
  2790   001158  D003               	bra	u1167
  2791   00115A  0008               	tblrd		*
  2792   00115C  50F5               	movf	tablat,w,c
  2793   00115E  D005               	bra	u1160
  2794   001160                     u1167:
  2795   001160  CFF6 FFE1          	movff	tblptrl,fsr1l
  2796   001164  CFF7 FFE2          	movff	tblptrh,fsr1h
  2797   001168  50E7               	movf	indf1,w,c
  2798   00116A                     u1160:
  2799   00116A  0900               	iorlw	0
  2800   00116C  A4D8               	btfss	status,2,c
  2801   00116E  EFBB  F008         	goto	u1171
  2802   001172  EFBD  F008         	goto	u1170
  2803   001176                     u1171:
  2804   001176  EF85  F008         	goto	l1995
  2805   00117A                     u1170:
  2806   00117A  0012               	return		;funcret
  2807   00117C                     __end_of_Lcd_Write_String:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function _Lcd_Write_Char *****************
  2811 ;; Defined at:
  2812 ;;		line 90 in file "lcd.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  a               1    wreg     unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  a               1    3[COMRAM] unsigned char 
  2817 ;;  y               1    2[COMRAM] unsigned char 
  2818 ;;  temp            1    1[COMRAM] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2828 ;;      Params:         0       0       0       0       0       0       0       0       0
  2829 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2831 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2832 ;;Total ram usage:        3 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 1
  2835 ;; This function calls:
  2836 ;;		_Lcd_Port
  2837 ;; This function is called by:
  2838 ;;		_Lcd_Write_String
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text18
  2843   00141C                     __ptext18:
  2844                           	callstack 0
  2845   00141C                     _Lcd_Write_Char:
  2846                           	callstack 28
  2847                           
  2848                           ;incstack = 0
  2849                           ;Lcd_Write_Char@a stored from wreg
  2850   00141C  6E04               	movwf	Lcd_Write_Char@a^0,c
  2851   00141E                     
  2852                           ;lcd.c: 90: void Lcd_Write_Char(char a);lcd.c: 91: {;lcd.c: 93:     char temp, y;;lcd.c:
      +                           94:     temp = a & 0x0F;
  2853   00141E  5004               	movf	Lcd_Write_Char@a^0,w,c
  2854   001420  0B0F               	andlw	15
  2855   001422  6E02               	movwf	Lcd_Write_Char@temp^0,c
  2856                           
  2857                           ;lcd.c: 95:     y = a & 0xF0;
  2858   001424  5004               	movf	Lcd_Write_Char@a^0,w,c
  2859   001426  0BF0               	andlw	240
  2860   001428  6E03               	movwf	Lcd_Write_Char@y^0,c
  2861   00142A                     
  2862                           ;lcd.c: 96:     LATDbits.LD2 = 1;
  2863   00142A  848C               	bsf	140,2,c	;volatile
  2864   00142C                     
  2865                           ;lcd.c: 97:     Lcd_Port(y >> 4);
  2866   00142C  3803               	swapf	Lcd_Write_Char@y^0,w,c
  2867   00142E  0B0F               	andlw	15
  2868   001430  EC64  F009         	call	_Lcd_Port
  2869   001434                     
  2870                           ;lcd.c: 98:     LATDbits.LD3 = 1;
  2871   001434  868C               	bsf	140,3,c	;volatile
  2872   001436                     
  2873                           ;lcd.c: 99:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  2874   001436  0E42               	movlw	66
  2875   001438                     u1437:
  2876   001438  2EE8               	decfsz	wreg,f,c
  2877   00143A  D7FE               	bra	u1437
  2878   00143C  D000               	nop2	
  2879   00143E                     
  2880                           ;lcd.c: 100:     LATDbits.LD3 = 0;
  2881   00143E  968C               	bcf	140,3,c	;volatile
  2882   001440                     
  2883                           ;lcd.c: 101:     Lcd_Port(temp);
  2884   001440  5002               	movf	Lcd_Write_Char@temp^0,w,c
  2885   001442  EC64  F009         	call	_Lcd_Port
  2886   001446                     
  2887                           ;lcd.c: 102:     LATDbits.LD3 = 1;
  2888   001446  868C               	bsf	140,3,c	;volatile
  2889   001448                     
  2890                           ;lcd.c: 103:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  2891   001448  0E42               	movlw	66
  2892   00144A                     u1447:
  2893   00144A  2EE8               	decfsz	wreg,f,c
  2894   00144C  D7FE               	bra	u1447
  2895   00144E  D000               	nop2	
  2896   001450                     
  2897                           ;lcd.c: 104:     LATDbits.LD3 = 0;
  2898   001450  968C               	bcf	140,3,c	;volatile
  2899   001452  0012               	return		;funcret
  2900   001454                     __end_of_Lcd_Write_Char:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _Lcd_Set_Cursor *****************
  2904 ;; Defined at:
  2905 ;;		line 39 in file "lcd.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  a               1    wreg     unsigned char 
  2908 ;;  b               1    3[COMRAM] unsigned char 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  a               1    7[COMRAM] unsigned char 
  2911 ;;  temp            1    6[COMRAM] unsigned char 
  2912 ;;  y               1    5[COMRAM] unsigned char 
  2913 ;;  z               1    4[COMRAM] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2923 ;;      Params:         1       0       0       0       0       0       0       0       0
  2924 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2926 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2927 ;;Total ram usage:        5 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 2
  2930 ;; This function calls:
  2931 ;;		_Lcd_Cmd
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text19
  2938   000FF6                     __ptext19:
  2939                           	callstack 0
  2940   000FF6                     _Lcd_Set_Cursor:
  2941                           	callstack 28
  2942                           
  2943                           ;incstack = 0
  2944                           ;Lcd_Set_Cursor@a stored from wreg
  2945   000FF6  6E08               	movwf	Lcd_Set_Cursor@a^0,c
  2946   000FF8                     
  2947                           ;lcd.c: 39: void Lcd_Set_Cursor(char a, char b);lcd.c: 40: {;lcd.c: 42:     char temp, z
      +                          , y;;lcd.c: 43:     if (a == 1)
  2948   000FF8  0408               	decf	Lcd_Set_Cursor@a^0,w,c
  2949   000FFA  A4D8               	btfss	status,2,c
  2950   000FFC  EF02  F008         	goto	u1111
  2951   001000  EF04  F008         	goto	u1110
  2952   001004                     u1111:
  2953   001004  EF09  F008         	goto	l1945
  2954   001008                     u1110:
  2955   001008                     
  2956                           ;lcd.c: 44:         temp = 0x80 + b - 1;
  2957   001008  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  2958   00100A  0F7F               	addlw	127
  2959   00100C  6E07               	movwf	Lcd_Set_Cursor@temp^0,c
  2960   00100E  EF31  F008         	goto	l154
  2961   001012                     l1945:
  2962   001012  0E02               	movlw	2
  2963   001014  1808               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2964   001016  A4D8               	btfss	status,2,c
  2965   001018  EF10  F008         	goto	u1121
  2966   00101C  EF12  F008         	goto	u1120
  2967   001020                     u1121:
  2968   001020  EF17  F008         	goto	l1949
  2969   001024                     u1120:
  2970   001024                     
  2971                           ;lcd.c: 46:         temp = 0xC0 + b - 1;
  2972   001024  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  2973   001026  0FBF               	addlw	191
  2974   001028  6E07               	movwf	Lcd_Set_Cursor@temp^0,c
  2975   00102A  EF31  F008         	goto	l154
  2976   00102E                     l1949:
  2977   00102E  0E03               	movlw	3
  2978   001030  1808               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2979   001032  A4D8               	btfss	status,2,c
  2980   001034  EF1E  F008         	goto	u1131
  2981   001038  EF20  F008         	goto	u1130
  2982   00103C                     u1131:
  2983   00103C  EF25  F008         	goto	l1953
  2984   001040                     u1130:
  2985   001040                     
  2986                           ;lcd.c: 48:         temp = 0x94 + b - 1;
  2987   001040  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  2988   001042  0F93               	addlw	147
  2989   001044  6E07               	movwf	Lcd_Set_Cursor@temp^0,c
  2990   001046  EF31  F008         	goto	l154
  2991   00104A                     l1953:
  2992   00104A  0E04               	movlw	4
  2993   00104C  1808               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2994   00104E  A4D8               	btfss	status,2,c
  2995   001050  EF2C  F008         	goto	u1141
  2996   001054  EF2E  F008         	goto	u1140
  2997   001058                     u1141:
  2998   001058  EF31  F008         	goto	l154
  2999   00105C                     u1140:
  3000   00105C                     
  3001                           ;lcd.c: 50:         temp = 0xD4 + b - 1;
  3002   00105C  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3003   00105E  0FD3               	addlw	211
  3004   001060  6E07               	movwf	Lcd_Set_Cursor@temp^0,c
  3005   001062                     l154:
  3006                           
  3007                           ;lcd.c: 52:     z = temp >> 4;
  3008   001062  3807               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3009   001064  0B0F               	andlw	15
  3010   001066  6E05               	movwf	Lcd_Set_Cursor@z^0,c
  3011                           
  3012                           ;lcd.c: 53:     y = temp & 0x0F;
  3013   001068  5007               	movf	Lcd_Set_Cursor@temp^0,w,c
  3014   00106A  0B0F               	andlw	15
  3015   00106C  6E06               	movwf	Lcd_Set_Cursor@y^0,c
  3016   00106E                     
  3017                           ;lcd.c: 54:     Lcd_Cmd(z);
  3018   00106E  5005               	movf	Lcd_Set_Cursor@z^0,w,c
  3019   001070  EC96  F00A         	call	_Lcd_Cmd
  3020   001074                     
  3021                           ;lcd.c: 55:     Lcd_Cmd(y);
  3022   001074  5006               	movf	Lcd_Set_Cursor@y^0,w,c
  3023   001076  EC96  F00A         	call	_Lcd_Cmd
  3024   00107A  0012               	return		;funcret
  3025   00107C                     __end_of_Lcd_Set_Cursor:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _Lcd_Init *****************
  3029 ;; Defined at:
  3030 ;;		line 58 in file "lcd.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3046 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3047 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        1 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 3
  3051 ;; This function calls:
  3052 ;;		_Lcd_Clear
  3053 ;;		_Lcd_Cmd
  3054 ;;		_Lcd_Port
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text20
  3061   00107C                     __ptext20:
  3062                           	callstack 0
  3063   00107C                     _Lcd_Init:
  3064                           	callstack 27
  3065   00107C                     
  3066                           ;lcd.c: 61:     TRISDbits.TRISD2 = 0;
  3067   00107C  9495               	bcf	149,2,c	;volatile
  3068                           
  3069                           ;lcd.c: 62:     TRISDbits.TRISD3 = 0;
  3070   00107E  9695               	bcf	149,3,c	;volatile
  3071                           
  3072                           ;lcd.c: 63:     TRISDbits.TRISD4 = 0;
  3073   001080  9895               	bcf	149,4,c	;volatile
  3074                           
  3075                           ;lcd.c: 64:     TRISDbits.TRISD5 = 0;
  3076   001082  9A95               	bcf	149,5,c	;volatile
  3077                           
  3078                           ;lcd.c: 65:     TRISDbits.TRISD6 = 0;
  3079   001084  9C95               	bcf	149,6,c	;volatile
  3080                           
  3081                           ;lcd.c: 66:     TRISDbits.TRISD7 = 0;
  3082   001086  9E95               	bcf	149,7,c	;volatile
  3083   001088                     
  3084                           ;lcd.c: 68:     Lcd_Port(0x00);
  3085   001088  0E00               	movlw	0
  3086   00108A  EC64  F009         	call	_Lcd_Port
  3087   00108E                     
  3088                           ;lcd.c: 69:     _delay((unsigned long)((20)*(20000000/4000.0)));
  3089   00108E  0E82               	movlw	130
  3090   001090  6E04               	movwf	??_Lcd_Init^0,c
  3091   001092  0EDE               	movlw	222
  3092   001094                     u1457:
  3093   001094  2EE8               	decfsz	wreg,f,c
  3094   001096  D7FE               	bra	u1457
  3095   001098  2E04               	decfsz	??_Lcd_Init^0,f,c
  3096   00109A  D7FC               	bra	u1457
  3097   00109C                     
  3098                           ;lcd.c: 72:     Lcd_Cmd(0x03);
  3099   00109C  0E03               	movlw	3
  3100   00109E  EC96  F00A         	call	_Lcd_Cmd
  3101   0010A2                     
  3102                           ;lcd.c: 73:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3103   0010A2  0E21               	movlw	33
  3104   0010A4  6E04               	movwf	??_Lcd_Init^0,c
  3105   0010A6  0E76               	movlw	118
  3106   0010A8                     u1467:
  3107   0010A8  2EE8               	decfsz	wreg,f,c
  3108   0010AA  D7FE               	bra	u1467
  3109   0010AC  2E04               	decfsz	??_Lcd_Init^0,f,c
  3110   0010AE  D7FC               	bra	u1467
  3111   0010B0  D000               	nop2	
  3112   0010B2                     
  3113                           ;lcd.c: 74:     Lcd_Cmd(0x03);
  3114   0010B2  0E03               	movlw	3
  3115   0010B4  EC96  F00A         	call	_Lcd_Cmd
  3116   0010B8                     
  3117                           ;lcd.c: 75:     _delay((unsigned long)((11)*(20000000/4000.0)));
  3118   0010B8  0E48               	movlw	72
  3119   0010BA  6E04               	movwf	??_Lcd_Init^0,c
  3120   0010BC  0E6C               	movlw	108
  3121   0010BE                     u1477:
  3122   0010BE  2EE8               	decfsz	wreg,f,c
  3123   0010C0  D7FE               	bra	u1477
  3124   0010C2  2E04               	decfsz	??_Lcd_Init^0,f,c
  3125   0010C4  D7FC               	bra	u1477
  3126   0010C6  D000               	nop2	
  3127   0010C8                     
  3128                           ;lcd.c: 76:     Lcd_Cmd(0x03);
  3129   0010C8  0E03               	movlw	3
  3130   0010CA  EC96  F00A         	call	_Lcd_Cmd
  3131   0010CE                     
  3132                           ;lcd.c: 77:     Lcd_Cmd(0x02);
  3133   0010CE  0E02               	movlw	2
  3134   0010D0  EC96  F00A         	call	_Lcd_Cmd
  3135   0010D4                     
  3136                           ;lcd.c: 80:     Lcd_Cmd(0x02);
  3137   0010D4  0E02               	movlw	2
  3138   0010D6  EC96  F00A         	call	_Lcd_Cmd
  3139   0010DA                     
  3140                           ;lcd.c: 81:     Lcd_Cmd(0x08);
  3141   0010DA  0E08               	movlw	8
  3142   0010DC  EC96  F00A         	call	_Lcd_Cmd
  3143   0010E0                     
  3144                           ;lcd.c: 82:     Lcd_Cmd(0x00);
  3145   0010E0  0E00               	movlw	0
  3146   0010E2  EC96  F00A         	call	_Lcd_Cmd
  3147   0010E6                     
  3148                           ;lcd.c: 83:     Lcd_Cmd(0x0C);
  3149   0010E6  0E0C               	movlw	12
  3150   0010E8  EC96  F00A         	call	_Lcd_Cmd
  3151   0010EC                     
  3152                           ;lcd.c: 84:     Lcd_Cmd(0x00);
  3153   0010EC  0E00               	movlw	0
  3154   0010EE  EC96  F00A         	call	_Lcd_Cmd
  3155   0010F2                     
  3156                           ;lcd.c: 85:     Lcd_Cmd(0x06);
  3157   0010F2  0E06               	movlw	6
  3158   0010F4  EC96  F00A         	call	_Lcd_Cmd
  3159   0010F8                     
  3160                           ;lcd.c: 87:     Lcd_Clear();
  3161   0010F8  ECFA  F00A         	call	_Lcd_Clear	;wreg free
  3162   0010FC  0012               	return		;funcret
  3163   0010FE                     __end_of_Lcd_Init:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _Lcd_Clear *****************
  3167 ;; Defined at:
  3168 ;;		line 32 in file "lcd.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 2
  3189 ;; This function calls:
  3190 ;;		_Lcd_Cmd
  3191 ;; This function is called by:
  3192 ;;		_Lcd_Init
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text21
  3198   0015F4                     __ptext21:
  3199                           	callstack 0
  3200   0015F4                     _Lcd_Clear:
  3201                           	callstack 27
  3202   0015F4                     
  3203                           ;lcd.c: 35:     Lcd_Cmd(0);
  3204   0015F4  0E00               	movlw	0
  3205   0015F6  EC96  F00A         	call	_Lcd_Cmd
  3206                           
  3207                           ;lcd.c: 36:     Lcd_Cmd(1);
  3208   0015FA  0E01               	movlw	1
  3209   0015FC  EC96  F00A         	call	_Lcd_Cmd
  3210   001600  0012               	return		;funcret
  3211   001602                     __end_of_Lcd_Clear:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _Lcd_Cmd *****************
  3215 ;; Defined at:
  3216 ;;		line 23 in file "lcd.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  a               1    wreg     unsigned char 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  a               1    2[COMRAM] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0
  3231 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3232 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3233 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3234 ;;Total ram usage:        2 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 1
  3237 ;; This function calls:
  3238 ;;		_Lcd_Port
  3239 ;; This function is called by:
  3240 ;;		_Lcd_Clear
  3241 ;;		_Lcd_Set_Cursor
  3242 ;;		_Lcd_Init
  3243 ;;		_Lcd_Shift_Right
  3244 ;;		_Lcd_Shift_Left
  3245 ;;		_Lcd_Blink
  3246 ;;		_Lcd_NoBlink
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text22
  3251   00152C                     __ptext22:
  3252                           	callstack 0
  3253   00152C                     _Lcd_Cmd:
  3254                           	callstack 28
  3255                           
  3256                           ;incstack = 0
  3257                           ;Lcd_Cmd@a stored from wreg
  3258   00152C  6E03               	movwf	Lcd_Cmd@a^0,c
  3259   00152E                     
  3260                           ;lcd.c: 23: void Lcd_Cmd(char a);lcd.c: 24: {;lcd.c: 25:     LATDbits.LD2 = 0;
  3261   00152E  948C               	bcf	140,2,c	;volatile
  3262   001530                     
  3263                           ;lcd.c: 26:     Lcd_Port(a);
  3264   001530  5003               	movf	Lcd_Cmd@a^0,w,c
  3265   001532  EC64  F009         	call	_Lcd_Port
  3266   001536                     
  3267                           ;lcd.c: 27:     LATDbits.LD3 = 1;
  3268   001536  868C               	bsf	140,3,c	;volatile
  3269   001538                     
  3270                           ;lcd.c: 28:     _delay((unsigned long)((4)*(20000000/4000.0)));
  3271   001538  0E1A               	movlw	26
  3272   00153A  6E02               	movwf	??_Lcd_Cmd^0,c
  3273   00153C  0EF8               	movlw	248
  3274   00153E                     u1487:
  3275   00153E  2EE8               	decfsz	wreg,f,c
  3276   001540  D7FE               	bra	u1487
  3277   001542  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  3278   001544  D7FC               	bra	u1487
  3279   001546  D000               	nop2	
  3280   001548                     
  3281                           ;lcd.c: 29:     LATDbits.LD3 = 0;
  3282   001548  968C               	bcf	140,3,c	;volatile
  3283   00154A  0012               	return		;funcret
  3284   00154C                     __end_of_Lcd_Cmd:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function _Lcd_Port *****************
  3288 ;; Defined at:
  3289 ;;		line 14 in file "lcd.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  a               1    wreg     unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  a               1    0[COMRAM] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0
  3304 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3306 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3307 ;;Total ram usage:        1 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_Lcd_Cmd
  3313 ;;		_Lcd_Init
  3314 ;;		_Lcd_Write_Char
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text23
  3319   0012C8                     __ptext23:
  3320                           	callstack 0
  3321   0012C8                     _Lcd_Port:
  3322                           	callstack 28
  3323                           
  3324                           ;incstack = 0
  3325                           ;Lcd_Port@a stored from wreg
  3326   0012C8  6E01               	movwf	Lcd_Port@a^0,c
  3327   0012CA                     
  3328                           ;lcd.c: 14: void Lcd_Port(char a);lcd.c: 15: {;lcd.c: 17:     (a & 1) ? (LATDbits.LD4 = 
      +                          1) : (LATDbits.LD4 = 0);
  3329   0012CA  A001               	btfss	Lcd_Port@a^0,0,c
  3330   0012CC  EF6A  F009         	goto	u851
  3331   0012D0  EF6C  F009         	goto	u850
  3332   0012D4                     u851:
  3333   0012D4  EF6F  F009         	goto	l129
  3334   0012D8                     u850:
  3335   0012D8  888C               	bsf	140,4,c	;volatile
  3336   0012DA  EF70  F009         	goto	l1693
  3337   0012DE                     l129:
  3338   0012DE  988C               	bcf	140,4,c	;volatile
  3339   0012E0                     l1693:
  3340                           
  3341                           ;lcd.c: 18:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  3342   0012E0  A201               	btfss	Lcd_Port@a^0,1,c
  3343   0012E2  EF75  F009         	goto	u861
  3344   0012E6  EF77  F009         	goto	u860
  3345   0012EA                     u861:
  3346   0012EA  EF7A  F009         	goto	l133
  3347   0012EE                     u860:
  3348   0012EE  8A8C               	bsf	140,5,c	;volatile
  3349   0012F0  EF7B  F009         	goto	l1697
  3350   0012F4                     l133:
  3351   0012F4  9A8C               	bcf	140,5,c	;volatile
  3352   0012F6                     l1697:
  3353                           
  3354                           ;lcd.c: 19:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  3355   0012F6  A401               	btfss	Lcd_Port@a^0,2,c
  3356   0012F8  EF80  F009         	goto	u871
  3357   0012FC  EF82  F009         	goto	u870
  3358   001300                     u871:
  3359   001300  EF85  F009         	goto	l137
  3360   001304                     u870:
  3361   001304  8C8C               	bsf	140,6,c	;volatile
  3362   001306  EF86  F009         	goto	l1701
  3363   00130A                     l137:
  3364   00130A  9C8C               	bcf	140,6,c	;volatile
  3365   00130C                     l1701:
  3366                           
  3367                           ;lcd.c: 20:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  3368   00130C  A601               	btfss	Lcd_Port@a^0,3,c
  3369   00130E  EF8B  F009         	goto	u881
  3370   001312  EF8D  F009         	goto	u880
  3371   001316                     u881:
  3372   001316  EF90  F009         	goto	l141
  3373   00131A                     u880:
  3374   00131A  8E8C               	bsf	140,7,c	;volatile
  3375   00131C  EF91  F009         	goto	l144
  3376   001320                     l141:
  3377   001320  9E8C               	bcf	140,7,c	;volatile
  3378   001322                     l144:
  3379   001322  0012               	return		;funcret
  3380   001324                     __end_of_Lcd_Port:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _I2C_Init_Master *****************
  3384 ;; Defined at:
  3385 ;;		line 17 in file "i2c.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  sp_i2c          1    wreg     unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  sp_i2c          1    0[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0
  3400 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3402 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3403 ;;Total ram usage:        1 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text24
  3413   001324                     __ptext24:
  3414                           	callstack 0
  3415   001324                     _I2C_Init_Master:
  3416                           	callstack 30
  3417                           
  3418                           ;incstack = 0
  3419                           ;I2C_Init_Master@sp_i2c stored from wreg
  3420   001324  6E01               	movwf	I2C_Init_Master@sp_i2c^0,c
  3421   001326                     
  3422                           ;i2c.c: 17: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 18: {;i2c.c: 19:     TRISB
      +                          bits.TRISB1 = 1;
  3423   001326  8293               	bsf	147,1,c	;volatile
  3424                           
  3425                           ;i2c.c: 20:     TRISBbits.TRISB0 = 1;
  3426   001328  8093               	bsf	147,0,c	;volatile
  3427   00132A                     
  3428                           ;i2c.c: 21:     SSPSTAT = sp_i2c;
  3429   00132A  C001  FFC7         	movff	I2C_Init_Master@sp_i2c,4039	;volatile
  3430   00132E                     
  3431                           ;i2c.c: 22:     SSPCON1 = 0x28;
  3432   00132E  0E28               	movlw	40
  3433   001330  6EC6               	movwf	198,c	;volatile
  3434   001332                     
  3435                           ;i2c.c: 23:     SSPCON2 = 0x00;
  3436   001332  0E00               	movlw	0
  3437   001334  6EC5               	movwf	197,c	;volatile
  3438   001336                     
  3439                           ;i2c.c: 26:     if (sp_i2c == 0x80)
  3440   001336  0E80               	movlw	128
  3441   001338  1801               	xorwf	I2C_Init_Master@sp_i2c^0,w,c
  3442   00133A  A4D8               	btfss	status,2,c
  3443   00133C  EFA2  F009         	goto	u1091
  3444   001340  EFA4  F009         	goto	u1090
  3445   001344                     u1091:
  3446   001344  EFA8  F009         	goto	l1937
  3447   001348                     u1090:
  3448   001348                     
  3449                           ;i2c.c: 27:     {;i2c.c: 28:         SSPADD = 119;
  3450   001348  0E77               	movlw	119
  3451   00134A  6EC8               	movwf	200,c	;volatile
  3452                           
  3453                           ;i2c.c: 29:     }
  3454   00134C  EFB2  F009         	goto	l77
  3455   001350                     l1937:
  3456   001350  5001               	movf	I2C_Init_Master@sp_i2c^0,w,c
  3457   001352  A4D8               	btfss	status,2,c
  3458   001354  EFAE  F009         	goto	u1101
  3459   001358  EFB0  F009         	goto	u1100
  3460   00135C                     u1101:
  3461   00135C  EFB2  F009         	goto	l77
  3462   001360                     u1100:
  3463   001360                     
  3464                           ;i2c.c: 31:     {;i2c.c: 32:         SSPADD = 29;
  3465   001360  0E1D               	movlw	29
  3466   001362  6EC8               	movwf	200,c	;volatile
  3467   001364                     l77:
  3468   001364  0012               	return		;funcret
  3469   001366                     __end_of_I2C_Init_Master:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function _DS3231_Get_Time *****************
  3473 ;; Defined at:
  3474 ;;		line 40 in file "ds3231.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  hr              1    3[COMRAM] PTR unsigned char 
  3477 ;;		 -> hr(1), 
  3478 ;;  min             1    4[COMRAM] PTR unsigned char 
  3479 ;;		 -> min(1), 
  3480 ;;  sec             1    5[COMRAM] PTR unsigned char 
  3481 ;;		 -> sec(1), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3493 ;;      Params:         3       0       0       0       0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3495 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3496 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3497 ;;Total ram usage:        4 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 2
  3500 ;; This function calls:
  3501 ;;		_DS3231_Bcd_Bin
  3502 ;;		_DS3231_Read
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text25
  3509   0011F0                     __ptext25:
  3510                           	callstack 0
  3511   0011F0                     _DS3231_Get_Time:
  3512                           	callstack 28
  3513   0011F0                     
  3514                           ;ds3231.c: 41:     *sec = DS3231_Bcd_Bin(DS3231_Read(0x00) & 0x7F);
  3515   0011F0  5006               	movf	DS3231_Get_Time@sec^0,w,c
  3516   0011F2  6ED9               	movwf	fsr2l,c
  3517   0011F4  6ADA               	clrf	fsr2h,c
  3518   0011F6  0E00               	movlw	0
  3519   0011F8  EC5B  F00A         	call	_DS3231_Read
  3520   0011FC  0B7F               	andlw	127
  3521   0011FE  ECC9  F00A         	call	_DS3231_Bcd_Bin
  3522   001202  6EDF               	movwf	indf2,c
  3523                           
  3524                           ;ds3231.c: 42:     *min = DS3231_Bcd_Bin(DS3231_Read(0x01) & 0x7F);
  3525   001204  5005               	movf	DS3231_Get_Time@min^0,w,c
  3526   001206  6ED9               	movwf	fsr2l,c
  3527   001208  6ADA               	clrf	fsr2h,c
  3528   00120A  0E01               	movlw	1
  3529   00120C  EC5B  F00A         	call	_DS3231_Read
  3530   001210  0B7F               	andlw	127
  3531   001212  ECC9  F00A         	call	_DS3231_Bcd_Bin
  3532   001216  6EDF               	movwf	indf2,c
  3533                           
  3534                           ;ds3231.c: 43:     *hr = DS3231_Bcd_Bin(DS3231_Read(0x02) & 0x3F);
  3535   001218  5004               	movf	DS3231_Get_Time@hr^0,w,c
  3536   00121A  6ED9               	movwf	fsr2l,c
  3537   00121C  6ADA               	clrf	fsr2h,c
  3538   00121E  0E02               	movlw	2
  3539   001220  EC5B  F00A         	call	_DS3231_Read
  3540   001224  0B3F               	andlw	63
  3541   001226  ECC9  F00A         	call	_DS3231_Bcd_Bin
  3542   00122A  6EDF               	movwf	indf2,c
  3543   00122C                     
  3544                           ;ds3231.c: 46:     if (*hr >= 5) {
  3545   00122C  5004               	movf	DS3231_Get_Time@hr^0,w,c
  3546   00122E  6ED9               	movwf	fsr2l,c
  3547   001230  6ADA               	clrf	fsr2h,c
  3548   001232  0E04               	movlw	4
  3549   001234  64DF               	cpfsgt	indf2,c
  3550   001236  EF1F  F009         	goto	u1081
  3551   00123A  EF21  F009         	goto	u1080
  3552   00123E                     u1081:
  3553   00123E  EF28  F009         	goto	l1923
  3554   001242                     u1080:
  3555   001242                     
  3556                           ;ds3231.c: 47:         *hr -= 5;
  3557   001242  5004               	movf	DS3231_Get_Time@hr^0,w,c
  3558   001244  6ED9               	movwf	fsr2l,c
  3559   001246  6ADA               	clrf	fsr2h,c
  3560   001248  0E05               	movlw	5
  3561   00124A  5EDF               	subwf	indf2,f,c
  3562                           
  3563                           ;ds3231.c: 48:     } else {
  3564   00124C  EF31  F009         	goto	l37
  3565   001250                     l1923:
  3566                           
  3567                           ;ds3231.c: 49:         *hr = (*hr + 24) - 5;
  3568   001250  5004               	movf	DS3231_Get_Time@hr^0,w,c
  3569   001252  6ED9               	movwf	fsr2l,c
  3570   001254  6ADA               	clrf	fsr2h,c
  3571   001256  5004               	movf	DS3231_Get_Time@hr^0,w,c
  3572   001258  6EE1               	movwf	fsr1l,c
  3573   00125A  6AE2               	clrf	fsr1h,c
  3574   00125C  50E7               	movf	indf1,w,c
  3575   00125E  0F13               	addlw	19
  3576   001260  6EDF               	movwf	indf2,c
  3577   001262                     l37:
  3578   001262  0012               	return		;funcret
  3579   001264                     __end_of_DS3231_Get_Time:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _DS3231_Read *****************
  3583 ;; Defined at:
  3584 ;;		line 82 in file "ds3231.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  reg             1    wreg     unsigned char 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  reg             1    1[COMRAM] unsigned char 
  3589 ;;  data            1    2[COMRAM] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      unsigned char 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0
  3600 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3602 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3603 ;;Total ram usage:        2 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 1
  3606 ;; This function calls:
  3607 ;;		_I2C_Nack
  3608 ;;		_I2C_Read
  3609 ;;		_I2C_Restart
  3610 ;;		_I2C_Start
  3611 ;;		_I2C_Stop
  3612 ;;		_I2C_Write
  3613 ;; This function is called by:
  3614 ;;		_DS3231_Get_Time
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text26
  3619   0014B6                     __ptext26:
  3620                           	callstack 0
  3621   0014B6                     _DS3231_Read:
  3622                           	callstack 28
  3623                           
  3624                           ;incstack = 0
  3625                           ;DS3231_Read@reg stored from wreg
  3626   0014B6  6E02               	movwf	DS3231_Read@reg^0,c
  3627   0014B8                     
  3628                           ;ds3231.c: 85:     I2C_Start();
  3629   0014B8  ECDE  F00A         	call	_I2C_Start	;wreg free
  3630   0014BC                     
  3631                           ;ds3231.c: 86:     I2C_Write(0xD0);
  3632   0014BC  0ED0               	movlw	208
  3633   0014BE  ECA6  F00A         	call	_I2C_Write
  3634   0014C2                     
  3635                           ;ds3231.c: 87:     I2C_Write(reg);
  3636   0014C2  5002               	movf	DS3231_Read@reg^0,w,c
  3637   0014C4  ECA6  F00A         	call	_I2C_Write
  3638                           
  3639                           ;ds3231.c: 88:     I2C_Restart();
  3640   0014C8  ECE8  F00A         	call	_I2C_Restart	;wreg free
  3641   0014CC                     
  3642                           ;ds3231.c: 89:     I2C_Write(0xD0 | 0x01);
  3643   0014CC  0ED1               	movlw	209
  3644   0014CE  ECA6  F00A         	call	_I2C_Write
  3645   0014D2                     
  3646                           ;ds3231.c: 90:     data = I2C_Read();
  3647   0014D2  ECB3  F00A         	call	_I2C_Read	;wreg free
  3648   0014D6  6E03               	movwf	DS3231_Read@data^0,c
  3649   0014D8                     
  3650                           ;ds3231.c: 91:     I2C_Nack();
  3651   0014D8  ECBE  F00A         	call	_I2C_Nack	;wreg free
  3652   0014DC                     
  3653                           ;ds3231.c: 92:     I2C_Stop();
  3654   0014DC  ECD4  F00A         	call	_I2C_Stop	;wreg free
  3655   0014E0                     
  3656                           ;ds3231.c: 93:     return data;
  3657   0014E0  5003               	movf	DS3231_Read@data^0,w,c
  3658   0014E2  0012               	return		;funcret
  3659   0014E4                     __end_of_DS3231_Read:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _I2C_Write *****************
  3663 ;; Defined at:
  3664 ;;		line 79 in file "i2c.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  data            1    wreg     unsigned char 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  data            1    0[COMRAM] unsigned char 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  2    4[None  ] short 
  3671 ;; Registers used:
  3672 ;;		wreg
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0
  3679 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3681 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3682 ;;Total ram usage:        1 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_DS3231_Set_Date_Time
  3688 ;;		_DS3231_Read
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text27
  3693   00154C                     __ptext27:
  3694                           	callstack 0
  3695   00154C                     _I2C_Write:
  3696                           	callstack 28
  3697                           
  3698                           ;incstack = 0
  3699                           ;I2C_Write@data stored from wreg
  3700   00154C  6E01               	movwf	I2C_Write@data^0,c
  3701   00154E                     
  3702                           ;i2c.c: 79: short I2C_Write(char data);i2c.c: 80: {;i2c.c: 81:     SSPBUF = data;
  3703   00154E  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3704   001552                     l110:
  3705   001552  A69E               	btfss	158,3,c	;volatile
  3706   001554  EFAE  F00A         	goto	u971
  3707   001558  EFB0  F00A         	goto	u970
  3708   00155C                     u971:
  3709   00155C  EFA9  F00A         	goto	l110
  3710   001560                     u970:
  3711   001560                     
  3712                           ;i2c.c: 83:     PIR1bits.SSPIF = 0;
  3713   001560  969E               	bcf	158,3,c	;volatile
  3714                           
  3715                           ;i2c.c: 84:     return SSPCON2bits.ACKSTAT;;	Return value of _I2C_Write is never used
  3716   001562  50C5               	movf	197,w,c	;volatile
  3717   001564  0012               	return		;funcret
  3718   001566                     __end_of_I2C_Write:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _I2C_Stop *****************
  3722 ;; Defined at:
  3723 ;;		line 45 in file "i2c.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		None
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_DS3231_Set_Date_Time
  3747 ;;		_DS3231_Read
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text28
  3752   0015A8                     __ptext28:
  3753                           	callstack 0
  3754   0015A8                     _I2C_Stop:
  3755                           	callstack 28
  3756   0015A8                     
  3757                           ;i2c.c: 47:     SSPCON2bits.PEN = 1;
  3758   0015A8  84C5               	bsf	197,2,c	;volatile
  3759   0015AA                     l86:
  3760   0015AA  A69E               	btfss	158,3,c	;volatile
  3761   0015AC  EFDA  F00A         	goto	u991
  3762   0015B0  EFDC  F00A         	goto	u990
  3763   0015B4                     u991:
  3764   0015B4  EFD5  F00A         	goto	l86
  3765   0015B8                     u990:
  3766   0015B8                     
  3767                           ;i2c.c: 49:     PIR1bits.SSPIF = 0;
  3768   0015B8  969E               	bcf	158,3,c	;volatile
  3769   0015BA  0012               	return		;funcret
  3770   0015BC                     __end_of_I2C_Stop:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _I2C_Start *****************
  3774 ;; Defined at:
  3775 ;;		line 37 in file "i2c.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		None
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_DS3231_Set_Date_Time
  3799 ;;		_DS3231_Read
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text29
  3804   0015BC                     __ptext29:
  3805                           	callstack 0
  3806   0015BC                     _I2C_Start:
  3807                           	callstack 28
  3808   0015BC                     
  3809                           ;i2c.c: 39:     SSPCON2bits.SEN = 1;
  3810   0015BC  80C5               	bsf	197,0,c	;volatile
  3811   0015BE                     l80:
  3812   0015BE  A69E               	btfss	158,3,c	;volatile
  3813   0015C0  EFE4  F00A         	goto	u961
  3814   0015C4  EFE6  F00A         	goto	u960
  3815   0015C8                     u961:
  3816   0015C8  EFDF  F00A         	goto	l80
  3817   0015CC                     u960:
  3818   0015CC                     
  3819                           ;i2c.c: 41:     PIR1bits.SSPIF = 0;
  3820   0015CC  969E               	bcf	158,3,c	;volatile
  3821   0015CE  0012               	return		;funcret
  3822   0015D0                     __end_of_I2C_Start:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _I2C_Restart *****************
  3826 ;; Defined at:
  3827 ;;		line 53 in file "i2c.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		None
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_DS3231_Read
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text30
  3855   0015D0                     __ptext30:
  3856                           	callstack 0
  3857   0015D0                     _I2C_Restart:
  3858                           	callstack 28
  3859   0015D0                     
  3860                           ;i2c.c: 55:     SSPCON2bits.RSEN = 1;
  3861   0015D0  82C5               	bsf	197,1,c	;volatile
  3862   0015D2                     l92:
  3863   0015D2  A69E               	btfss	158,3,c	;volatile
  3864   0015D4  EFEE  F00A         	goto	u1001
  3865   0015D8  EFF0  F00A         	goto	u1000
  3866   0015DC                     u1001:
  3867   0015DC  EFE9  F00A         	goto	l92
  3868   0015E0                     u1000:
  3869   0015E0                     
  3870                           ;i2c.c: 57:     PIR1bits.SSPIF = 0;
  3871   0015E0  969E               	bcf	158,3,c	;volatile
  3872   0015E2  0012               	return		;funcret
  3873   0015E4                     __end_of_I2C_Restart:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _I2C_Read *****************
  3877 ;; Defined at:
  3878 ;;		line 88 in file "i2c.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      unsigned char 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_DS3231_Read
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text31
  3906   001566                     __ptext31:
  3907                           	callstack 0
  3908   001566                     _I2C_Read:
  3909                           	callstack 28
  3910   001566                     
  3911                           ;i2c.c: 90:     SSPCON2bits.RCEN = 1;
  3912   001566  86C5               	bsf	197,3,c	;volatile
  3913   001568                     l116:
  3914   001568  A69E               	btfss	158,3,c	;volatile
  3915   00156A  EFB9  F00A         	goto	u1011
  3916   00156E  EFBB  F00A         	goto	u1010
  3917   001572                     u1011:
  3918   001572  EFB4  F00A         	goto	l116
  3919   001576                     u1010:
  3920   001576                     
  3921                           ;i2c.c: 92:     PIR1bits.SSPIF = 0;
  3922   001576  969E               	bcf	158,3,c	;volatile
  3923   001578                     
  3924                           ;i2c.c: 93:     return SSPBUF;
  3925   001578  50C9               	movf	201,w,c	;volatile
  3926   00157A  0012               	return		;funcret
  3927   00157C                     __end_of_I2C_Read:
  3928                           	callstack 0
  3929                           
  3930 ;; *************** function _I2C_Nack *****************
  3931 ;; Defined at:
  3932 ;;		line 70 in file "i2c.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		None
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3946 ;;      Params:         0       0       0       0       0       0       0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3949 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3950 ;;Total ram usage:        0 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_DS3231_Read
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text32
  3960   00157C                     __ptext32:
  3961                           	callstack 0
  3962   00157C                     _I2C_Nack:
  3963                           	callstack 28
  3964   00157C                     
  3965                           ;i2c.c: 72:     SSPCON2bits.ACKDT = 1;
  3966   00157C  8AC5               	bsf	197,5,c	;volatile
  3967                           
  3968                           ;i2c.c: 73:     SSPCON2bits.ACKEN = 1;
  3969   00157E  88C5               	bsf	197,4,c	;volatile
  3970   001580                     l104:
  3971   001580  A69E               	btfss	158,3,c	;volatile
  3972   001582  EFC5  F00A         	goto	u1021
  3973   001586  EFC7  F00A         	goto	u1020
  3974   00158A                     u1021:
  3975   00158A  EFC0  F00A         	goto	l104
  3976   00158E                     u1020:
  3977   00158E                     
  3978                           ;i2c.c: 75:     PIR1bits.SSPIF = 0;
  3979   00158E  969E               	bcf	158,3,c	;volatile
  3980   001590  0012               	return		;funcret
  3981   001592                     __end_of_I2C_Nack:
  3982                           	callstack 0
  3983                           
  3984 ;; *************** function _DS3231_Bcd_Bin *****************
  3985 ;; Defined at:
  3986 ;;		line 120 in file "ds3231.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  bcd_value       1    wreg     unsigned char 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  bcd_value       1    1[COMRAM] unsigned char 
  3991 ;;  temp            1    0[COMRAM] unsigned char 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      unsigned char 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0, prodl, prodh
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0
  4002 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4004 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4005 ;;Total ram usage:        2 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_DS3231_Get_Time
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text33
  4015   001592                     __ptext33:
  4016                           	callstack 0
  4017   001592                     _DS3231_Bcd_Bin:
  4018                           	callstack 29
  4019                           
  4020                           ;incstack = 0
  4021                           ;DS3231_Bcd_Bin@bcd_value stored from wreg
  4022   001592  6E02               	movwf	DS3231_Bcd_Bin@bcd_value^0,c
  4023   001594                     
  4024                           ;ds3231.c: 120: uint8_t DS3231_Bcd_Bin(uint8_t bcd_value);ds3231.c: 121: {;ds3231.c: 122
      +                          :     uint8_t temp;;ds3231.c: 123:     temp = (bcd_value >> 4) * 10;
  4025   001594  3802               	swapf	DS3231_Bcd_Bin@bcd_value^0,w,c
  4026   001596  0B0F               	andlw	15
  4027   001598  0D0A               	mullw	10
  4028   00159A  CFF3 F001          	movff	prodl,DS3231_Bcd_Bin@temp
  4029   00159E                     
  4030                           ;ds3231.c: 124:     temp += (bcd_value & 0x0F);
  4031   00159E  5002               	movf	DS3231_Bcd_Bin@bcd_value^0,w,c
  4032   0015A0  0B0F               	andlw	15
  4033   0015A2  2601               	addwf	DS3231_Bcd_Bin@temp^0,f,c
  4034   0015A4                     
  4035                           ;ds3231.c: 125:     return temp;
  4036   0015A4  5001               	movf	DS3231_Bcd_Bin@temp^0,w,c
  4037   0015A6  0012               	return		;funcret
  4038   0015A8                     __end_of_DS3231_Bcd_Bin:
  4039                           	callstack 0
  4040                           
  4041                           	psect	rparam
  4042   000000                     
  4043                           	psect	idloc
  4044                           
  4045                           ;Config register IDLOC0 @ 0x200000
  4046                           ;	unspecified, using default values
  4047   200000                     	org	2097152
  4048   200000  FF                 	db	255
  4049                           
  4050                           ;Config register IDLOC1 @ 0x200001
  4051                           ;	unspecified, using default values
  4052   200001                     	org	2097153
  4053   200001  FF                 	db	255
  4054                           
  4055                           ;Config register IDLOC2 @ 0x200002
  4056                           ;	unspecified, using default values
  4057   200002                     	org	2097154
  4058   200002  FF                 	db	255
  4059                           
  4060                           ;Config register IDLOC3 @ 0x200003
  4061                           ;	unspecified, using default values
  4062   200003                     	org	2097155
  4063   200003  FF                 	db	255
  4064                           
  4065                           ;Config register IDLOC4 @ 0x200004
  4066                           ;	unspecified, using default values
  4067   200004                     	org	2097156
  4068   200004  FF                 	db	255
  4069                           
  4070                           ;Config register IDLOC5 @ 0x200005
  4071                           ;	unspecified, using default values
  4072   200005                     	org	2097157
  4073   200005  FF                 	db	255
  4074                           
  4075                           ;Config register IDLOC6 @ 0x200006
  4076                           ;	unspecified, using default values
  4077   200006                     	org	2097158
  4078   200006  FF                 	db	255
  4079                           
  4080                           ;Config register IDLOC7 @ 0x200007
  4081                           ;	unspecified, using default values
  4082   200007                     	org	2097159
  4083   200007  FF                 	db	255
  4084                           
  4085                           	psect	config
  4086                           
  4087                           ;Config register CONFIG1L @ 0x300000
  4088                           ;	PLL Prescaler Selection bits
  4089                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  4090                           ;	System Clock Postscaler Selection bits
  4091                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4092                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4093                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4094   300000                     	org	3145728
  4095   300000  04                 	db	4
  4096                           
  4097                           ;Config register CONFIG1H @ 0x300001
  4098                           ;	Oscillator Selection bits
  4099                           ;	FOSC = HS, HS oscillator (HS)
  4100                           ;	Fail-Safe Clock Monitor Enable bit
  4101                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4102                           ;	Internal/External Oscillator Switchover bit
  4103                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4104   300001                     	org	3145729
  4105   300001  0C                 	db	12
  4106                           
  4107                           ;Config register CONFIG2L @ 0x300002
  4108                           ;	Power-up Timer Enable bit
  4109                           ;	PWRT = OFF, PWRT disabled
  4110                           ;	Brown-out Reset Enable bits
  4111                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  4112                           ;	Brown-out Reset Voltage bits
  4113                           ;	BORV = 3, Minimum setting 2.05V
  4114                           ;	USB Voltage Regulator Enable bit
  4115                           ;	VREGEN = OFF, USB voltage regulator disabled
  4116   300002                     	org	3145730
  4117   300002  19                 	db	25
  4118                           
  4119                           ;Config register CONFIG2H @ 0x300003
  4120                           ;	Watchdog Timer Enable bit
  4121                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4122                           ;	Watchdog Timer Postscale Select bits
  4123                           ;	WDTPS = 32768, 1:32768
  4124   300003                     	org	3145731
  4125   300003  1E                 	db	30
  4126                           
  4127                           ; Padding undefined space
  4128   300004                     	org	3145732
  4129   300004  FF                 	db	255
  4130                           
  4131                           ;Config register CONFIG3H @ 0x300005
  4132                           ;	CCP2 MUX bit
  4133                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4134                           ;	PORTB A/D Enable bit
  4135                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4136                           ;	Low-Power Timer 1 Oscillator Enable bit
  4137                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4138                           ;	MCLR Pin Enable bit
  4139                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4140   300005                     	org	3145733
  4141   300005  81                 	db	129
  4142                           
  4143                           ;Config register CONFIG4L @ 0x300006
  4144                           ;	Stack Full/Underflow Reset Enable bit
  4145                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4146                           ;	Single-Supply ICSP Enable bit
  4147                           ;	LVP = OFF, Single-Supply ICSP disabled
  4148                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4149                           ;	ICPRT = OFF, ICPORT disabled
  4150                           ;	Extended Instruction Set Enable bit
  4151                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4152                           ;	Background Debugger Enable bit
  4153                           ;	DEBUG = 0x1, unprogrammed default
  4154   300006                     	org	3145734
  4155   300006  81                 	db	129
  4156                           
  4157                           ; Padding undefined space
  4158   300007                     	org	3145735
  4159   300007  FF                 	db	255
  4160                           
  4161                           ;Config register CONFIG5L @ 0x300008
  4162                           ;	Code Protection bit
  4163                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4164                           ;	Code Protection bit
  4165                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4166                           ;	Code Protection bit
  4167                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4168                           ;	Code Protection bit
  4169                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4170   300008                     	org	3145736
  4171   300008  0F                 	db	15
  4172                           
  4173                           ;Config register CONFIG5H @ 0x300009
  4174                           ;	Boot Block Code Protection bit
  4175                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4176                           ;	Data EEPROM Code Protection bit
  4177                           ;	CPD = OFF, Data EEPROM is not code-protected
  4178   300009                     	org	3145737
  4179   300009  C0                 	db	192
  4180                           
  4181                           ;Config register CONFIG6L @ 0x30000A
  4182                           ;	Write Protection bit
  4183                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4184                           ;	Write Protection bit
  4185                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4186                           ;	Write Protection bit
  4187                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4188                           ;	Write Protection bit
  4189                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4190   30000A                     	org	3145738
  4191   30000A  0F                 	db	15
  4192                           
  4193                           ;Config register CONFIG6H @ 0x30000B
  4194                           ;	Configuration Register Write Protection bit
  4195                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4196                           ;	Boot Block Write Protection bit
  4197                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4198                           ;	Data EEPROM Write Protection bit
  4199                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4200   30000B                     	org	3145739
  4201   30000B  E0                 	db	224
  4202                           
  4203                           ;Config register CONFIG7L @ 0x30000C
  4204                           ;	Table Read Protection bit
  4205                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4206                           ;	Table Read Protection bit
  4207                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4208                           ;	Table Read Protection bit
  4209                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4210                           ;	Table Read Protection bit
  4211                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4212   30000C                     	org	3145740
  4213   30000C  0F                 	db	15
  4214                           
  4215                           ;Config register CONFIG7H @ 0x30000D
  4216                           ;	Boot Block Table Read Protection bit
  4217                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4218   30000D                     	org	3145741
  4219   30000D  40                 	db	64
  4220                           tosu	equ	0xFFF
  4221                           tosh	equ	0xFFE
  4222                           tosl	equ	0xFFD
  4223                           stkptr	equ	0xFFC
  4224                           pclatu	equ	0xFFB
  4225                           pclath	equ	0xFFA
  4226                           pcl	equ	0xFF9
  4227                           tblptru	equ	0xFF8
  4228                           tblptrh	equ	0xFF7
  4229                           tblptrl	equ	0xFF6
  4230                           tablat	equ	0xFF5
  4231                           prodh	equ	0xFF4
  4232                           prodl	equ	0xFF3
  4233                           indf0	equ	0xFEF
  4234                           postinc0	equ	0xFEE
  4235                           postdec0	equ	0xFED
  4236                           preinc0	equ	0xFEC
  4237                           plusw0	equ	0xFEB
  4238                           fsr0h	equ	0xFEA
  4239                           fsr0l	equ	0xFE9
  4240                           wreg	equ	0xFE8
  4241                           indf1	equ	0xFE7
  4242                           postinc1	equ	0xFE6
  4243                           postdec1	equ	0xFE5
  4244                           preinc1	equ	0xFE4
  4245                           plusw1	equ	0xFE3
  4246                           fsr1h	equ	0xFE2
  4247                           fsr1l	equ	0xFE1
  4248                           bsr	equ	0xFE0
  4249                           indf2	equ	0xFDF
  4250                           postinc2	equ	0xFDE
  4251                           postdec2	equ	0xFDD
  4252                           preinc2	equ	0xFDC
  4253                           plusw2	equ	0xFDB
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     64      77
    BANK0           160      0      52
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DS3231_Get_Time@hr	PTR unsigned char  size(1) Largest target is 1
		 -> hr(COMRAM[1]), 

    DS3231_Get_Time@min	PTR unsigned char  size(1) Largest target is 1
		 -> min(COMRAM[1]), 

    DS3231_Get_Time@sec	PTR unsigned char  size(1) Largest target is 1
		 -> sec(COMRAM[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_2(CODE[17]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1079$buffer	PTR unsigned char  size(2) Largest target is 0

    S1079$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), STR_3(CODE[15]), STR_4(CODE[15]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), STR_3(CODE[15]), STR_4(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), STR_3(CODE[15]), STR_4(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), STR_3(CODE[15]), STR_4(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _read_prec_or_width->___wmul
    _inicializarHoraColombia->_DS3231_Set_Date_Time
    _DS3231_Set_Date_Time->_DS3231_Bin_Bcd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _DS3231_Get_Time->_DS3231_Read
    _DS3231_Read->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9838
                                             62 COMRAM     2     2      0
                    _DS3231_Get_Time
                    _I2C_Init_Master
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awmod
            _inicializarHoraColombia
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8    6189
                                             41 COMRAM    21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    5532
                                             37 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           10     7      3    5173
                                             28 COMRAM     9     6      3
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 8     5      3    3198
                                             20 COMRAM     8     5      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4    2172
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1083
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     643
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _inicializarHoraColombia                              0     0      0     335
               _DS3231_Set_Date_Time
 ---------------------------------------------------------------------------------
 (2) _DS3231_Set_Date_Time                                 3     1      2     335
                                              3 COMRAM     3     1      2
                     _DS3231_Bin_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _DS3231_Bin_Bcd                                       3     3      0      93
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1056
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     572
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     684
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init_Master                                      1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DS3231_Get_Time                                      4     1      3     518
                                              3 COMRAM     4     1      3
                     _DS3231_Bcd_Bin
                        _DS3231_Read
 ---------------------------------------------------------------------------------
 (2) _DS3231_Read                                          2     2      0      68
                                              1 COMRAM     2     2      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DS3231_Bcd_Bin                                       2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS3231_Get_Time
     _DS3231_Bcd_Bin
     _DS3231_Read
       _I2C_Nack
       _I2C_Read
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _I2C_Init_Master
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___awmod
   _inicializarHoraColombia
     _DS3231_Set_Date_Time
       _DS3231_Bin_Bcd
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      34       5       32.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     40      4D       1       81.1%
BITBIGSFRhhh        36      0       0      20        0.0%
BITBIGSFRhhlhl      22      0       0      22        0.0%
BITBIGSFRll         20      0       0      28        0.0%
BITBIGSFRlh          9      0       0      27        0.0%
BITBIGSFRhhllh       8      0       0      23        0.0%
BITBIGSFRhlh         5      0       0      25        0.0%
BITBIGSFRhhlhh       3      0       0      21        0.0%
BITBIGSFRhhlll       1      0       0      24        0.0%
BITBIGSFRhll         1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      81      29        0.0%
DATA                 0      0      81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Dec 05 15:44:38 2024

                             l44 14E2                               l52 14B4                               l37 1262  
                             l29 141A                               l55 15A6                               l80 15BE  
                             l82 15CC                               l83 15CE                               l92 15D2  
                             l77 1364                               l94 15E0                               l86 15AA  
                             l95 15E2                               l88 15B8                               l89 15BA  
                             _hr 004D              ___wmul@multiplicand 0003                              l110 1552  
                            l104 1580                              l112 1560                              l113 1564  
                            l106 158E                              l107 1590                              l116 1568  
                            l141 1320                              l133 12F4                              l118 1576  
                            l150 1600                              l119 157A                              l144 1322  
                            l160 107A                              l137 130A                              l129 12DE  
                            l154 1062                              l147 154A                              l163 10FC  
                            l172 117A                              l236 0872                              l229 15F2  
                            l245 09B4                              l166 1452                              l254 0A7A  
                            l511 0E1A                              l249 0A00                              l258 0AC6  
                            l267 1508                              l765 11EE                              l758 11E6  
                            l775 12C6                              l768 12BE                              l945 1486  
                            l963 0F9C                              l982 0F62                              l966 0FDA  
                            l968 0FF4                              l986 0F6A                              l978 0D6A  
                            u700 0E2C                              u701 0E28                              u710 0E3C  
                            u711 0E38                              u800 12AA                              u720 0E62  
                            u801 12A6                              u721 0E5E                              u730 0E94  
                            u810 0F7A                              u731 0E90                              u811 0F76  
                            u740 13DE                              u820 0F94                              u900 0D1C  
                            u741 13DA                              u821 0F90                              u901 0D18  
                            u750 1196                              u830 0FDA                              u910 0D2C  
                            u751 1192                              u831 0FD6                              u911 0D28  
                            u760 11B4                              u840 0FE8                              u920 0D46  
                            u761 11B0                              u841 0FE4                              u921 0D42  
                            u850 12D8                              u770 11D0                              u930 0D54  
                            u851 12D4                              u771 11CC                              u931 0D50  
                            u860 12EE                              u940 0EF0                              u780 1276  
                            u861 12EA                              u941 0EEC                              u781 1272  
                            u870 1304                              u950 0F62                              u790 1294  
                            u871 1300                              u951 0F5E                              u791 1290  
                            u960 15CC                              u880 131A                              u961 15C8  
                            u881 1316                              u970 1560                              u890 0D0A  
                            u971 155C                              u891 0D06                              u980 14A2  
                            u981 149E                              u990 15B8                              u991 15B4  
                            _pad 0F6C                              _min 004C                              _sec 004B  
                   ___awmod@sign 0006                              wreg 0FE8                             l1010 13A2  
                           l1003 0C8A                             l1022 0EC4                             l1030 13DE  
                           l2001 15E4                             l1033 1602                             l2011 147C  
                           l2003 1454                             l2021 0D86                             l2005 145C  
                           l2101 0934                             l2031 0DBA                             l2023 0D8A  
                           l2015 0D6C                             l2007 1464                             l2111 097C  
                           l2103 0944                             l2041 0DF4                             l2033 0DC2  
                           l2025 0D98                             l2017 0D70                             l2009 146C  
                           l2121 09C2                             l2113 0992                             l2105 0946  
                           l2035 0DD0                             l2043 0DFA                             l2027 0DA0  
                           l2019 0D7E                             l2131 0A1C                             l2123 09D0  
                           l2115 099C                             l2107 095E                             l2045 0E0A  
                           l2037 0DE6                             l2029 0DB2                             l2133 0A42  
                           l2125 09F2                             l2117 09A6                             l2109 0960  
                           l2061 084A                             l2047 0E12                             l2039 0DEE  
                           l2151 0AD4                             l2143 0A88                             l2135 0A58  
                           l2071 0856                             l2063 084C                             l2153 0AE2  
                           l2145 0A96                             l2137 0A62                             l2129 0A0E  
                           l2081 0880                             l2073 085C                             l2065 084E  
                           l1611 0E3C                             l2155 0B08                             l2147 0AB8  
                           l2139 0A6C                             l2091 08F2                             l2083 088E  
                           l2075 0860                             l2067 0850                             l2059 0846  
                           l1701 130C                             l1613 0E46                             l1621 13A4  
                           l2093 08FC                             l2085 0892                             l2077 0864  
                           l2069 0852                             l1703 131A                             l1631 1500  
                           l1615 0E62                             l1607 0E1C                             l1623 13B0  
                           l1711 0CAA                             l2095 0906                             l2087 08B8  
                           l2159 0B10                             l1641 119E                             l1617 0E94  
                           l1609 0E2C                             l1625 13BE                             l1713 0CB0  
                           l1721 0CF8                             l1705 0C8C                             l1801 0B76  
                           l2097 0918                             l2089 08C8                             l1651 11D8  
                           l1643 11A6                             l1635 117C                             l1627 13C2  
                           l1723 0D0A                             l1731 0D54                             l1715 0CD2  
                           l1707 0C90                             l1811 0BB8                             l1803 0B82  
                           l2099 092A                             l1901 1446                             l1629 14E4  
                           l1741 0EF8                             l1653 11DA                             l1645 11B4  
                           l1637 1184                             l1661 127E                             l1725 0D1C  
                           l1717 0CD6                             l1709 0CA0                             l1821 0C0A  
                           l1813 0BCC                             l1751 154E                             l1903 1448  
                           l1743 0F14                             l1735 0EC6                             l1655 11E0  
                           l1647 11BA                             l1639 1196                             l1671 12B8  
                           l1663 1286                             l1727 0D2C                             l1719 0CDC  
                           l1831 0C44                             l1823 0C22                             l1815 0BDA  
                           l1807 0B8A                             l1911 137E                             l1921 1242  
                           l1905 1450                             l1761 14AE                             l1753 148A  
                           l1745 0F34                             l1737 0ECE                             l1649 11D0  
                           l1665 1294                             l1657 1264                             l1681 0FA8  
                           l1673 0F6C                             l1729 0D46                             l1825 0C30  
                           l1833 0C5C                             l1817 0BE4                             l1809 0BA8  
                           l1913 139A                             l1771 1566                             l1923 1250  
                           l1931 1332                             l1691 12D8                             l1763 14B2  
                           l1755 148E                             l1851 1402                             l1843 13E2  
                           l1739 0EF0                             l1747 0F3C                             l1667 12AA  
                           l1659 1276                             l1683 0FB8                             l1675 0F7A  
                           l1819 0BEE                             l1907 1366                             l1773 1578  
                           l1749 15BC                             l1861 14BC                             l1917 11F0  
                           l1933 1336                             l1925 1326                             l1693 12E0  
                           l1781 1530                             l1941 0FF8                             l1757 1492  
                           l1853 140C                             l1845 13E4                             l1669 12B2  
                           l1685 0FBC                             l1677 0F86                             l1837 0C68  
                           l1909 136E                             l1767 15A8                             l1871 14DC  
                           l1863 14C2                             l1919 122C                             l1935 1348  
                           l1927 132A                             l1695 12EE                             l1783 1536  
                           l1951 1040                             l1943 1008                             l1759 14A2  
                           l1855 1416                             l1847 13E8                             l1687 0FE8  
                           l1679 0F94                             l1791 0B54                             l1881 15A4  
                           l1777 157C                             l1769 15D0                             l1873 14E0  
                           l1865 14CC                             l1857 14B8                             l1937 1350  
                           l1929 132E                             l1697 12F6                             l1689 12CA  
                           l1785 1538                             l1961 107C                             l1953 104A  
                           l1945 1012                             l1849 13F8                             l1793 0B5C  
                           l1867 14D2                             l1859 14B8                             l1939 1360  
                           l1699 1304                             l1787 1548                             l1779 152E  
                           l1971 10B2                             l1963 1088                             l1955 105C  
                           l1947 1024                             l1891 142C                             l1795 0B68  
                           l1877 1594                             l1869 14D8                             l1885 15F4  
                           l1981 10DA                             l1973 10B8                             l1965 108E  
                           l1957 106E                             l1949 102E                             l1893 1434  
                           l1797 0B6C                             l1789 0B32                             ?_pad 000E  
                           l1879 159E                             l1991 10F8                             l1983 10E0  
                           l1975 10C8                             l1967 109C                             l1959 1074  
                           l1895 1436                             l1887 141E                             l1799 0B74  
                           l1985 10E6                             l1977 10CE                             l1969 10A2  
                           l1897 143E                             l1889 142A                             l1993 10FE  
                           l1987 10EC                             l1979 10D4                             l1899 1440  
                           l1995 110A                             l1989 10F2                             l1997 113A  
                           l1999 113E                             STR_1 0801                             STR_2 0816  
                           STR_3 0827                             STR_4 0836                             u1000 15E0  
                           u1001 15DC                             u1010 1576                             u1011 1572  
                           u1020 158E                             u1100 1360                             u1021 158A  
                           u1101 135C                             u1110 1008                             u1030 0B54  
                           u1111 1004                             u1031 0B50                             u1120 1024  
                           u1200 0DB2                             u1040 0BB8                             u1121 1020  
                           u1201 0DAE                             u1041 0BB4                             u1130 1040  
                           u1210 0DD0                             u1050 0BDA                             u1131 103C  
                           u1211 0DCC                             u1051 0BD6                             u1140 105C  
                           u1220 0DE6                             u1060 0C0A                             u1300 0A00  
                           u1141 1058                             u1221 0DE2                             u1061 0C06  
                           u1301 09FC                             u1150 1136                             u1230 0E0A  
                           u1070 139A                             u1310 0A0E                             u1231 0E06  
                           u1071 1396                             u1311 0A0A                             u1080 1242  
                           u1160 116A                             u1320 0A7A                             u1240 0872  
                           u1081 123E                             u1321 0A76                             u1241 086E  
                           u1090 1348                             u1170 117A                             u1330 0A88  
                           u1250 0880                             u1091 1344                             u1171 1176  
                           u1331 0A84                             u1251 087C                             u1180 0D7E  
                           u1340 0AC6                             u1260 0918                             u1157 112C  
                           u1181 0D7A                             u1341 0AC2                             u1261 0914  
                           u1190 0D98                             u1350 0AD4                             u1270 092A  
                           u1167 1160                             u1191 0D94                             u1351 0AD0  
                           u1407 0A14                             u1271 0926                             u1280 09B4  
                           u1417 0A8E                             u1281 09B0                             u1290 09C2  
                           u1427 0ADA                             u1291 09BE                             u1437 1438  
                           u1447 144A                             u1367 0886                             u1457 1094  
                           u1377 0950                             u1467 10A8                             u1387 096A  
                           u1477 10BE                             u1397 09C8                             u1487 153E  
              ?_Lcd_Write_String 0005                             _dbuf 0060                             _main 0846  
               __end_of_I2C_Nack 1592                             _prec 0043                 __end_of_I2C_Read 157C  
                           pad@i 0013                             pad@p 0010                             fsr1h 0FE2  
                           fsr2h 0FDA                             indf1 0FE7                             indf2 0FDF  
                           fsr1l 0FE1                             fsr2l 0FD9                             _utoa 0C8C  
               __end_of_I2C_Stop 15BC                             prodh 0FF4                             prodl 0FF3  
                           start 0000               ??_Lcd_Write_String 0007                 ?_I2C_Init_Master 0001  
                __end_of_Lcd_Cmd 154C                ??_DS3231_Get_Time 0007                     ___param_bank 0000  
                          ??_pad 0012                            ?_main 0001                  __end_of___awmod 0E1C  
                          ?_utoa 0015                  __end_of___lwdiv 11F0                  __end_of___lwmod 12C8  
                   vfpfcnvrt@fmt 001E                            _flags 0045              read_prec_or_width@c 0009  
            read_prec_or_width@n 000A                            _fputc 0E1C                            _fputs 13A4  
                          pad@fp 000E                            _width 0041                            _putch 1602  
              __end_of_I2C_Start 15D0                __end_of_I2C_Write 1566                            tablat 0FF5  
                          utoa@d 0016                            utoa@i 001B                            utoa@p 0018  
                          utoa@w 0019                            status 0FD8                  __end_of_sprintf 1488  
               __end_of_Lcd_Init 10FE                 __end_of_Lcd_Port 1324                  __initialization 150A  
                   __end_of_main 0B32                     __end_of_utoa 0D6C                   _DS3231_Bcd_Bin 1592  
                 _DS3231_Bin_Bcd 1488                           ??_main 003F                           ??_utoa 0018  
                  __activetblptr 0002       __end_of_read_prec_or_width 0F6C                           ?_fputc 0001  
                         ?_fputs 0009                           ?_putch 0001                        ??_Lcd_Cmd 0002  
                  vfpfcnvrt@done 0024                           _SSPADD 0FC8                           _SSPBUF 0FC9  
                   vfprintf@cfmt 0029           __end_of_DS3231_Bcd_Bin 15A8                           ___wmul 14E4  
                      ??___awmod 0005           __end_of_DS3231_Bin_Bcd 14B6                        ??___lwdiv 0005  
                      ??___lwmod 0005                           _buffer 0080                           _estado 0048  
           read_prec_or_width@ap 0008                           clear_0 1510                           clear_1 151C  
                ___awmod@divisor 0003                           isa$std 0001                  ___awmod@counter 0005  
                         pad@buf 000F                           fputc@c 0001                           fputs@c 000B  
                         fputs@i 000C                        ?_I2C_Nack 0001                           fputs@s 0009  
                      ?_I2C_Read 0001                        ?_I2C_Stop 0001                     __mediumconst 0000  
                         tblptrh 0FF7                           tblptrl 0FF6                           tblptru 0FF8  
                         putch@c 0001                 __end_of_vfprintf 13A4                           utoa@fp 0015  
                      ??_sprintf 0032                  Lcd_Set_Cursor@a 0008                  Lcd_Set_Cursor@b 0004  
                Lcd_Set_Cursor@y 0006                  Lcd_Set_Cursor@z 0005               DS3231_Bcd_Bin@temp 0001  
                     __accesstop 0060          __end_of__initialization 1522                __end_of_Lcd_Clear 1602  
                  ___rparam_used 0001                   __pcstackCOMRAM 0001                  ?_DS3231_Bcd_Bin 0001  
                ?_DS3231_Bin_Bcd 0001                    __end_of_fputc 0EC6                    __end_of_fputs 13E0  
                  __end_of_putch 1604                   _Lcd_Set_Cursor 0FF6                       ??_I2C_Nack 0001  
                     ??_I2C_Read 0001                     _alarm_minute 0049                       ??_I2C_Stop 0001  
                      ?_Lcd_Init 0001                        ?_Lcd_Port 0001                          ??_fputc 0004  
                        ??_fputs 000B                          ??_putch 0001                  _DS3231_Get_Time 11F0  
                     __pbssBANK0 0060                    ??_DS3231_Read 0002                       _alarm_hour 004A  
                        ?___wmul 0001           __end_of_Lcd_Set_Cursor 107C                    ??_I2C_Restart 0001  
                     ??_Lcd_Init 0004                       ??_Lcd_Port 0001                          _SSPCON1 0FC6  
                        _SSPCON2 0FC5                          _SSPSTAT 0FC7                   _Lcd_Write_Char 141C  
                        _Lcd_Cmd 152C                        _I2C_Start 15BC                        _I2C_Write 154C  
                        __Hparam 0000                          __Lparam 0000              __end_of_DS3231_Read 14E4  
                        ___awmod 0D6C                          ___lwdiv 117C                          ___lwmod 1264  
                      ?_vfprintf 0026                     __psmallconst 0800                          __pcinit 150A  
                        __ramtop 0800                  ?_Lcd_Set_Cursor 0004               DS3231_Bin_Bcd@temp 0003  
                        __ptext0 0846                          __ptext1 1454                          __ptext2 1366  
                        __ptext3 0B32                          __ptext4 0C8C                          __ptext5 0F6C  
                        __ptext6 13A4                          __ptext7 0E1C                          __ptext8 1602  
                        __ptext9 1264            read_prec_or_width@fmt 0007          __end_of_DS3231_Get_Time 1264  
               ___awmod@dividend 0001                          _sprintf 1454              __end_of_I2C_Restart 15E4  
         __end_of_Lcd_Write_Char 1454             end_of_initialization 1522                          fputc@fp 0003  
                  __Lmediumconst 0000                          fputs@fp 000A               _read_prec_or_width 0EC6  
                     ?_I2C_Start 0001                       ?_I2C_Write 0001                __end_of_vfpfcnvrt 0C8C  
                        postdec2 0FDD              ?_read_prec_or_width 0007                          postinc0 0FEE  
                        postinc1 0FE6                          postinc2 0FDE                 vfpfcnvrt@convarg 0020  
                      Lcd_Port@a 0001                       ??_vfprintf 0029          _inicializarHoraColombia 15E4  
                      _PORTAbits 0F80                        _TRISAbits 0F92                        _TRISBbits 0F93  
                      _TRISDbits 0F95             ??_read_prec_or_width 0009                  ?_Lcd_Write_Char 0001  
              Lcd_Write_String@a 0005                Lcd_Write_String@i 0009                      _DS3231_Read 14B6  
               ??_DS3231_Bcd_Bin 0001                 ??_DS3231_Bin_Bcd 0001     __end_of_DS3231_Set_Date_Time 141C  
                      _Lcd_Clear 15F4                      vfpfcnvrt@ap 001F                      vfpfcnvrt@cp 0025  
                    vfpfcnvrt@fp 001D                   __end_of___wmul 150A                 _Lcd_Write_String 10FE  
                    _I2C_Restart 15D0              start_initialization 150A                 ?_DS3231_Get_Time 0004  
              ??_I2C_Init_Master 0001                      __end_of_pad 0FF6            I2C_Init_Master@sp_i2c 0001  
                    ??_I2C_Start 0001                      ??_I2C_Write 0001                      vfprintf@fmt 0027  
                     ?_Lcd_Clear 0001                         ??___wmul 0005        ??_inicializarHoraColombia 0007  
                Lcd_Write_Char@a 0004                  Lcd_Write_Char@y 0003               DS3231_Get_Time@min 0005  
             DS3231_Get_Time@sec 0006                      __pbssCOMRAM 0041                         ?_Lcd_Cmd 0001  
                      _alarm_min 0046                 ___lwdiv@dividend 0001                 ??_Lcd_Set_Cursor 0005  
                       ?___awmod 0001             DS3231_Bin_Bcd@retval 0002                         ?___lwdiv 0001  
                       ?___lwmod 0001                      __smallconst 0800                         _I2C_Nack 157C  
                       _I2C_Read 1566                         _I2C_Stop 15A8             _DS3231_Set_Date_Time 13E0  
__end_of_inicializarHoraColombia 15F4                 ___lwdiv@quotient 0005                         ?_sprintf 002A  
                 ___wmul@product 0005                         _LATBbits 0F8A                         _LATDbits 0F8C  
        DS3231_Bcd_Bin@bcd_value 0002                  DS3231_Read@data 0003                         Lcd_Cmd@a 0003  
                       _PIR1bits 0F9E                      ??_Lcd_Clear 0004                        _vfpfcnvrt 0B32  
                     _ADCON1bits 0FC1                ___wmul@multiplier 0001                 ??_Lcd_Write_Char 0002  
          ?_DS3231_Set_Date_Time 0004                         _Lcd_Init 107C                         _Lcd_Port 12C8  
       __end_of_Lcd_Write_String 117C                     ?_DS3231_Read 0001                         __Hrparam 0000  
                     vfprintf@ap 0028                         __Lrparam 0000                       vfprintf@fp 0026  
                _I2C_Init_Master 1324                    I2C_Write@data 0001                DS3231_Get_Time@hr 0004  
                     ?_vfpfcnvrt 001D                     ?_I2C_Restart 0001                       sprintf@fmt 002B  
                       _alarm_hr 0047                  ___lwdiv@divisor 0003                  ___lwdiv@counter 0007  
                       __ptext10 117C                         __ptext11 0EC6                         __ptext20 107C  
                       __ptext12 14E4                         __ptext21 15F4                         __ptext13 15E4  
                       __ptext30 15D0                         __ptext22 152C                         __ptext14 13E0  
                       __ptext31 1566                         __ptext23 12C8                         __ptext15 1488  
                       __ptext32 157C                         __ptext24 1324                         __ptext16 0D6C  
                       __ptext33 1592                         __ptext25 11F0                         __ptext17 10FE  
                       __ptext26 14B6                         __ptext18 141C                         __ptext27 154C  
                       __ptext19 0FF6                         __ptext28 15A8                         __ptext29 15BC  
     DS3231_Bin_Bcd@binary_value 0001                   DS3231_Read@reg 0002                         isa$xinst 0000  
                       _vfprintf 1366           ??_DS3231_Set_Date_Time 0006           DS3231_Set_Date_Time@hr 0006  
         DS3231_Set_Date_Time@mn 0004           DS3231_Set_Date_Time@sc 0005               Lcd_Write_Char@temp 0002  
                      sprintf@ap 0032                 ___lwmod@dividend 0001          __end_of_I2C_Init_Master 1366  
                    ??_vfpfcnvrt 0020               Lcd_Set_Cursor@temp 0007                         sprintf@f 0033  
                       sprintf@s 002A                  ___lwmod@divisor 0003                  ___lwmod@counter 0005  
                    _SSPCON2bits 0FC5         ?_inicializarHoraColombia 0001  
